{"ast":null,"code":"var _jsxFileName = \"/Users/amandadargenio/java-react/project/frontend/metronics-react-frontend/src/components/ViewModel.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { useQuery, useQueryClient } from \"react-query\";\nimport API from \"../API\"; // import { SideNavBar, Searchbar } from \"../components\";\n// const fetchModel = async () => await API.getViewModel();\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ViewModel() {\n  _s();\n\n  const [modelResults, setModelResults] = useState({});\n  const [viewmodel, setViewModelState] = useState();\n  const [results, setResults] = useState();\n  const [selectCustomer, setSelectCustomerState] = useState();\n  const location = useLocation(); // console.log(\"DATA\");\n  // console.log(modelResults.data.data);\n  // const queryClient = useQueryClient();\n\n  const filterView = () => {\n    results.filter(v => {\n      v.customerId === selectCustomer ? setViewModelState(v) : console.log(\"not valid\");\n    }); //get all requests and if the request customerId is === selected customer, return the list of requests\n    //get customer by id using selected customer\n  };\n\n  useEffect(async () => {\n    ;\n    await setSelectCustomerState(location.state.setCustomer);\n    await API.getViewModel().then(res => {\n      setModelResults(res.data);\n    });\n    await filterView();\n    console.log(location.state.setCustomer);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Hello dATA\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 10\n  }, this);\n}\n\n_s(ViewModel, \"f+mbikLZ9MRkqTfHB0tl+A2cn88=\", false, function () {\n  return [useLocation];\n});\n\n_c = ViewModel;\nexport default ViewModel;\n\nvar _c;\n\n$RefreshReg$(_c, \"ViewModel\");","map":{"version":3,"sources":["/Users/amandadargenio/java-react/project/frontend/metronics-react-frontend/src/components/ViewModel.js"],"names":["useEffect","useState","useLocation","useQuery","useQueryClient","API","ViewModel","modelResults","setModelResults","viewmodel","setViewModelState","results","setResults","selectCustomer","setSelectCustomerState","location","filterView","filter","v","customerId","console","log","state","setCustomer","getViewModel","then","res","data"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SAASC,QAAT,EAAmBC,cAAnB,QAAyC,aAAzC;AACA,OAAOC,GAAP,MAAgB,QAAhB,C,CACA;AAEA;;;;AAEA,SAASC,SAAT,GAAqB;AAAA;;AACnB,QAAM,CAAEC,YAAF,EAAgBC,eAAhB,IAAoCP,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAM,CAACQ,SAAD,EAAYC,iBAAZ,IAAiCT,QAAQ,EAA/C;AACA,QAAM,CAACU,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,EAAtC;AACA,QAAM,CAACY,cAAD,EAAiBC,sBAAjB,IAA2Cb,QAAQ,EAAzD;AACA,QAAMc,QAAQ,GAAGb,WAAW,EAA5B,CALmB,CAOnB;AACA;AAEA;;AAEA,QAAMc,UAAU,GAAG,MAAM;AACvBL,IAAAA,OAAO,CAACM,MAAR,CAAgBC,CAAD,IAAO;AACpBA,MAAAA,CAAC,CAACC,UAAF,KAAiBN,cAAjB,GACIH,iBAAiB,CAACQ,CAAD,CADrB,GAEIE,OAAO,CAACC,GAAR,CAAY,WAAZ,CAFJ;AAGD,KAJD,EADuB,CAMvB;AACA;AACD,GARD;;AAUArB,EAAAA,SAAS,CAAC,YAAY;AAAC;AACtB,UAAMc,sBAAsB,CAACC,QAAQ,CAACO,KAAT,CAAeC,WAAhB,CAA5B;AAEA,UAAMlB,GAAG,CAACmB,YAAJ,GACLC,IADK,CACCC,GAAD,IAAS;AACblB,MAAAA,eAAe,CAACkB,GAAG,CAACC,IAAL,CAAf;AACD,KAHK,CAAN;AAKA,UAAMX,UAAU,EAAhB;AAECI,IAAAA,OAAO,CAACC,GAAR,CAAYN,QAAQ,CAACO,KAAT,CAAeC,WAA3B;AACD,GAXQ,EAWN,EAXM,CAAT;AAaA,sBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;GApCQjB,S;UAKUJ,W;;;KALVI,S;AAsCT,eAAeA,SAAf","sourcesContent":["import { useEffect, useState } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { useQuery, useQueryClient } from \"react-query\";\nimport API from \"../API\";\n// import { SideNavBar, Searchbar } from \"../components\";\n\n// const fetchModel = async () => await API.getViewModel();\n\nfunction ViewModel() {\n  const [ modelResults, setModelResults ] = useState({});\n  const [viewmodel, setViewModelState] = useState();\n  const [results, setResults] = useState();\n  const [selectCustomer, setSelectCustomerState] = useState();\n  const location = useLocation();\n\n  // console.log(\"DATA\");\n  // console.log(modelResults.data.data);\n\n  // const queryClient = useQueryClient();\n\n  const filterView = () => {\n    results.filter((v) => {\n      v.customerId === selectCustomer\n        ? setViewModelState(v)\n        : console.log(\"not valid\");\n    });\n    //get all requests and if the request customerId is === selected customer, return the list of requests\n    //get customer by id using selected customer\n  };\n\n  useEffect(async () => {;\n   await setSelectCustomerState(location.state.setCustomer)\n   \n   await API.getViewModel()\n   .then((res) => {\n     setModelResults(res.data)\n   })\n\n   await filterView();\n\n    console.log(location.state.setCustomer);\n  }, []);\n\n  return <div>Hello dATA</div>;\n}\n\nexport default ViewModel;\n"]},"metadata":{},"sourceType":"module"}