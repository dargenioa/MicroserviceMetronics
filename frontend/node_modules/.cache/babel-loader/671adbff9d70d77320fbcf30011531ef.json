{"ast":null,"code":"var _jsxFileName = \"/Users/amandadargenio/java-react/project/frontend/metronics-react-frontend/src/components/ViewModel.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { useLocation } from \"react-router-dom\"; // import { useQuery, useQueryClient } from \"react-query\";\n\nimport API from \"../API\";\nimport Container from \"../components/Container/Container\";\nimport Col from \"../components/Col/Col\";\nimport Row from \"../components/Row/Row\";\nimport { SideNavBar } from \"../components\";\nimport { set } from \"js-cookie\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction ViewModel() {\n  _s();\n\n  const [modelResults, setModelResults] = useState({});\n  const [selectCustomer, setSelectCustomerState] = useState();\n  const [customer, setCustomer] = useState();\n  const location = useLocation();\n  const viewModel = []; // console.log(\"DATA\");\n  // console.log(modelResults.data.data);\n  // const queryClient = useQueryClient();\n\n  const filterView = () => {\n    modelResults.filter(v => {\n      v.customer.id === selectCustomer ? viewModel.push(v) : console.log(v + \" not a view model\");\n    });\n    console.log(viewModel);\n  };\n\n  useEffect(async () => {\n    ;\n    await setSelectCustomerState(location.state.setCustomer);\n    await API.getViewModel().then(res => {\n      setModelesults(res.data);\n    });\n    await filterView();\n    await setCustomer({\n      businessName: viewModel[0].customer.businessName,\n      contactName: viewModel[0].customer.contactName,\n      phone: viewModel[0].customer.phone,\n      street: viewModel[0].customer.street,\n      city: viewModel[0].customer.city,\n      state: viewModel[0].customer.state,\n      zipcode: viewModel[0].customer.zipcode\n    });\n    console.log(location.state.setCustomer);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"h\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 3\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 1\n    }, this)\n  }, void 0, false);\n}\n\n_s(ViewModel, \"lwJ6+DZNGPyF9J433YfkJD+UQFc=\", false, function () {\n  return [useLocation];\n});\n\n_c = ViewModel;\nexport default ViewModel;\n\nvar _c;\n\n$RefreshReg$(_c, \"ViewModel\");","map":{"version":3,"sources":["/Users/amandadargenio/java-react/project/frontend/metronics-react-frontend/src/components/ViewModel.js"],"names":["useEffect","useState","useLocation","API","Container","Col","Row","SideNavBar","set","ViewModel","modelResults","setModelResults","selectCustomer","setSelectCustomerState","customer","setCustomer","location","viewModel","filterView","filter","v","id","push","console","log","state","getViewModel","then","res","setModelesults","data","businessName","contactName","phone","street","city","zipcode"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,WAAT,QAA4B,kBAA5B,C,CACA;;AACA,OAAOC,GAAP,MAAgB,QAAhB;AACA,OAAOC,SAAP,MAAsB,mCAAtB;AACA,OAAOC,GAAP,MAAgB,uBAAhB;AACA,OAAOC,GAAP,MAAgB,uBAAhB;AACA,SAASC,UAAT,QAA2B,eAA3B;AACA,SAASC,GAAT,QAAoB,WAApB;;;;AAGA,SAASC,SAAT,GAAqB;AAAA;;AACnB,QAAM,CAAEC,YAAF,EAAgBC,eAAhB,IAAoCV,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAM,CAACW,cAAD,EAAiBC,sBAAjB,IAA2CZ,QAAQ,EAAzD;AACA,QAAM,CAACa,QAAD,EAAWC,WAAX,IAA0Bd,QAAQ,EAAxC;AACA,QAAMe,QAAQ,GAAGd,WAAW,EAA5B;AACA,QAAMe,SAAS,GAAG,EAAlB,CALmB,CAOnB;AACA;AAEA;;AAEA,QAAMC,UAAU,GAAG,MAAM;AACvBR,IAAAA,YAAY,CAACS,MAAb,CAAqBC,CAAD,IAAO;AACzBA,MAAAA,CAAC,CAACN,QAAF,CAAWO,EAAX,KAAkBT,cAAlB,GACAK,SAAS,CAACK,IAAV,CAAeF,CAAf,CADA,GAEAG,OAAO,CAACC,GAAR,CAAYJ,CAAC,GAAG,mBAAhB,CAFA;AAGD,KAJD;AAKAG,IAAAA,OAAO,CAACC,GAAR,CAAYP,SAAZ;AACD,GAPD;;AASAjB,EAAAA,SAAS,CAAC,YAAY;AAAC;AACtB,UAAMa,sBAAsB,CAACG,QAAQ,CAACS,KAAT,CAAeV,WAAhB,CAA5B;AAEA,UAAMZ,GAAG,CAACuB,YAAJ,GACLC,IADK,CACCC,GAAD,IAAS;AACbC,MAAAA,cAAc,CAACD,GAAG,CAACE,IAAL,CAAd;AACD,KAHK,CAAN;AAKA,UAAMZ,UAAU,EAAhB;AAEA,UAAMH,WAAW,CAAC;AACbgB,MAAAA,YAAY,EAAEd,SAAS,CAAC,CAAD,CAAT,CAAaH,QAAb,CAAsBiB,YADvB;AAEbC,MAAAA,WAAW,EAAEf,SAAS,CAAC,CAAD,CAAT,CAAaH,QAAb,CAAsBkB,WAFtB;AAGbC,MAAAA,KAAK,EAAEhB,SAAS,CAAC,CAAD,CAAT,CAAaH,QAAb,CAAsBmB,KAHhB;AAIbC,MAAAA,MAAM,EAAEjB,SAAS,CAAC,CAAD,CAAT,CAAaH,QAAb,CAAsBoB,MAJjB;AAKbC,MAAAA,IAAI,EAAElB,SAAS,CAAC,CAAD,CAAT,CAAaH,QAAb,CAAsBqB,IALf;AAMbV,MAAAA,KAAK,EAAER,SAAS,CAAC,CAAD,CAAT,CAAaH,QAAb,CAAsBW,KANhB;AAObW,MAAAA,OAAO,EAAEnB,SAAS,CAAC,CAAD,CAAT,CAAaH,QAAb,CAAsBsB;AAPlB,KAAD,CAAjB;AASCb,IAAAA,OAAO,CAACC,GAAR,CAAYR,QAAQ,CAACS,KAAT,CAAeV,WAA3B;AACD,GApBQ,EAoBN,EApBM,CAAT;AAsBA,sBACE;AAAA,2BACJ;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADI,mBADF;AASD;;GApDQN,S;UAIUP,W;;;KAJVO,S;AAsDT,eAAeA,SAAf","sourcesContent":["import { useEffect, useState } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n// import { useQuery, useQueryClient } from \"react-query\";\nimport API from \"../API\";\nimport Container from \"../components/Container/Container\";\nimport Col from \"../components/Col/Col\";\nimport Row from \"../components/Row/Row\";\nimport { SideNavBar } from \"../components\";\nimport { set } from \"js-cookie\";\n\n\nfunction ViewModel() {\n  const [ modelResults, setModelResults ] = useState({});\n  const [selectCustomer, setSelectCustomerState] = useState();\n  const [customer, setCustomer] = useState();\n  const location = useLocation();\n  const viewModel = [];\n\n  // console.log(\"DATA\");\n  // console.log(modelResults.data.data);\n\n  // const queryClient = useQueryClient();\n\n  const filterView = () => {\n    modelResults.filter((v) => {\n      v.customer.id === selectCustomer ? \n      viewModel.push(v) :\n      console.log(v + \" not a view model\")\n    })\n    console.log(viewModel);\n  };\n\n  useEffect(async () => {;\n   await setSelectCustomerState(location.state.setCustomer)\n   \n   await API.getViewModel()\n   .then((res) => {\n     setModelesults(res.data)\n   })\n\n   await filterView();\n\n   await setCustomer({\n        businessName: viewModel[0].customer.businessName,\n        contactName: viewModel[0].customer.contactName,\n        phone: viewModel[0].customer.phone,\n        street: viewModel[0].customer.street,\n        city: viewModel[0].customer.city,\n        state: viewModel[0].customer.state,\n        zipcode: viewModel[0].customer.zipcode\n      })\n    console.log(location.state.setCustomer);\n  }, []);\n\n  return (\n    <>\n<div>\n  <h3>\nh\n  </h3>\n</div>\n    </>\n  );\n}\n\nexport default ViewModel;\n"]},"metadata":{},"sourceType":"module"}