{"ast":null,"code":"var _jsxFileName = \"/Users/amandadargenio/java-react/project/frontend/metronics-react-frontend/src/components/ViewModel.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { useQuery, useQueryClient } from \"react-query\";\nimport API from \"../API\"; // import { SideNavBar, Searchbar } from \"../components\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst fetchModel = async () => await API.getViewModel();\n\nfunction ViewModel() {\n  _s();\n\n  const modelResults = useQuery(\"modelResults\", fetchModel);\n  const [viewmodel, setViewModelState] = useState();\n  const [results, setResults] = useState();\n  const [selectCustomer, setSelectCustomerState] = useState();\n  const location = useLocation();\n  console.log(\"DATA\");\n  console.log(modelResults.data.data);\n  const queryClient = useQueryClient();\n\n  const filterView = () => {\n    setResults(modelResults.data.data);\n    results.filter(v => {\n      v.customerId === selectCustomer ? setViewModelState(v) : console.log(\"not valid\");\n    }); //get all requests and if the request customerId is === selected customer, return the list of requests\n    //get customer by id using selected customer\n  }; // useEffect(async () => {;\n  //  await setSelectCustomerState(location.state.setCustomer)\n  // //  await filterView();\n  //   console.log(location.state.setCustomer);\n  // }, []);\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Hello dATA\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 10\n  }, this);\n}\n\n_s(ViewModel, \"s6jnpXfEi/9cAw8QLCZqnU/cg/s=\", false, function () {\n  return [useQuery, useLocation, useQueryClient];\n});\n\n_c = ViewModel;\nexport default ViewModel;\n\nvar _c;\n\n$RefreshReg$(_c, \"ViewModel\");","map":{"version":3,"sources":["/Users/amandadargenio/java-react/project/frontend/metronics-react-frontend/src/components/ViewModel.js"],"names":["useEffect","useState","useLocation","useQuery","useQueryClient","API","fetchModel","getViewModel","ViewModel","modelResults","viewmodel","setViewModelState","results","setResults","selectCustomer","setSelectCustomerState","location","console","log","data","queryClient","filterView","filter","v","customerId"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SAASC,QAAT,EAAmBC,cAAnB,QAAyC,aAAzC;AACA,OAAOC,GAAP,MAAgB,QAAhB,C,CACA;;;;AAEA,MAAMC,UAAU,GAAG,YAAY,MAAMD,GAAG,CAACE,YAAJ,EAArC;;AAEA,SAASC,SAAT,GAAqB;AAAA;;AACnB,QAAMC,YAAY,GAAGN,QAAQ,CAAC,cAAD,EAAiBG,UAAjB,CAA7B;AACA,QAAM,CAACI,SAAD,EAAYC,iBAAZ,IAAiCV,QAAQ,EAA/C;AACA,QAAM,CAACW,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,EAAtC;AACA,QAAM,CAACa,cAAD,EAAiBC,sBAAjB,IAA2Cd,QAAQ,EAAzD;AACA,QAAMe,QAAQ,GAAGd,WAAW,EAA5B;AAEAe,EAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAYT,YAAY,CAACU,IAAb,CAAkBA,IAA9B;AAEA,QAAMC,WAAW,GAAGhB,cAAc,EAAlC;;AAEA,QAAMiB,UAAU,GAAG,MAAM;AACvBR,IAAAA,UAAU,CAACJ,YAAY,CAACU,IAAb,CAAkBA,IAAnB,CAAV;AACAP,IAAAA,OAAO,CAACU,MAAR,CAAgBC,CAAD,IAAO;AACpBA,MAAAA,CAAC,CAACC,UAAF,KAAiBV,cAAjB,GACIH,iBAAiB,CAACY,CAAD,CADrB,GAEIN,OAAO,CAACC,GAAR,CAAY,WAAZ,CAFJ;AAGD,KAJD,EAFuB,CAQvB;AACA;AACD,GAVD,CAZmB,CAwBnB;AACA;AACA;AACA;AACA;;;AAEA,sBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;GA/BQV,S;UACcL,Q,EAIJD,W,EAKGE,c;;;KAVbI,S;AAiCT,eAAeA,SAAf","sourcesContent":["import { useEffect, useState } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { useQuery, useQueryClient } from \"react-query\";\nimport API from \"../API\";\n// import { SideNavBar, Searchbar } from \"../components\";\n\nconst fetchModel = async () => await API.getViewModel();\n\nfunction ViewModel() {\n  const modelResults = useQuery(\"modelResults\", fetchModel);\n  const [viewmodel, setViewModelState] = useState();\n  const [results, setResults] = useState();\n  const [selectCustomer, setSelectCustomerState] = useState();\n  const location = useLocation();\n\n  console.log(\"DATA\");\n  console.log(modelResults.data.data);\n\n  const queryClient = useQueryClient();\n\n  const filterView = () => {\n    setResults(modelResults.data.data);\n    results.filter((v) => {\n      v.customerId === selectCustomer\n        ? setViewModelState(v)\n        : console.log(\"not valid\");\n    });\n\n    //get all requests and if the request customerId is === selected customer, return the list of requests\n    //get customer by id using selected customer\n  };\n\n  // useEffect(async () => {;\n  //  await setSelectCustomerState(location.state.setCustomer)\n  // //  await filterView();\n  //   console.log(location.state.setCustomer);\n  // }, []);\n\n  return <div>Hello dATA</div>;\n}\n\nexport default ViewModel;\n"]},"metadata":{},"sourceType":"module"}