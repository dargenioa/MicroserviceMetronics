{"ast":null,"code":"import ky from 'ky';\nconst customerUrl = \"http://localhost:8080/api/customer/\";\nconst requestUrl = \"http://localhost:8080/api/requests/\";\nconst partUrl = \"http://localhost:8080/api/part/\";\nconst API = {\n  // Customers\n  getAllCustomers() {\n    return ky.get(customerUrl).json();\n  },\n\n  getCustomerById(id) {\n    return ky.get(customerUrl + id).json();\n  },\n\n  createCustomer(customer) {\n    return ky.post(customerUrl, {\n      json: customer\n    }).json();\n  },\n\n  updateCustomer(customer, id) {\n    return ky.put(customerUrl + id, {\n      json: customer\n    }).json();\n  },\n\n  deleteCustomer(customer, id) {\n    return ky.delete(customerUrl + id, {\n      json: customer\n    }).json();\n  },\n\n  // Requests\n  getAllRequests() {\n    return ky.get(requestUrl).json();\n  },\n\n  getRequestById(id) {\n    return ky.get(requestUrl + id).json();\n  },\n\n  createRequest(request) {\n    return ky.post(requestUrl, {\n      json: request\n    }).json();\n  },\n\n  updateRequest(request) {\n    return ky.put(requestUrl, {\n      json: request\n    }).json();\n  },\n\n  deleteRequest(id) {\n    return ky.delete(requestUrl + id);\n  },\n\n  // Parts\n  getAllParts() {\n    return ky.get(partUrl).json();\n  },\n\n  getPartById(id) {\n    return ky.get(partUrl + id).json();\n  },\n\n  createPart(part) {\n    return ky.post(partUrl, {\n      json: part\n    }).json();\n  },\n\n  updatePart(part) {\n    return ky.put(partUrl, {\n      json: part\n    }).json();\n  },\n\n  deletePart(id) {\n    return ky.delete(partUrl + id);\n  }\n\n};\nexport default API;","map":{"version":3,"sources":["/Users/amandadargenio/java-react/project/frontend/metronics-react-frontend/src/API/index.js"],"names":["ky","customerUrl","requestUrl","partUrl","API","getAllCustomers","get","json","getCustomerById","id","createCustomer","customer","post","updateCustomer","put","deleteCustomer","delete","getAllRequests","getRequestById","createRequest","request","updateRequest","deleteRequest","getAllParts","getPartById","createPart","part","updatePart","deletePart"],"mappings":"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","sourcesContent":["import ky from 'ky';\n\nconst customerUrl = \"http://localhost:8080/api/customer/\";\nconst requestUrl = \"http://localhost:8080/api/requests/\";\nconst partUrl = \"http://localhost:8080/api/part/\";\n\nconst API = {\n  // Customers\n  getAllCustomers() {\n    return ky.get(customerUrl).json();\n  },\n  getCustomerById(id) {\n    return ky.get(customerUrl + id).json();\n  },\n  createCustomer(customer) {\n    return ky.post(customerUrl, { json: customer }).json();\n  },\n  updateCustomer(customer, id) {\n    return ky.put(customerUrl + id, { json: customer }).json();\n  },\n  deleteCustomer(customer, id) {\n    return ky.delete(customerUrl + id, { json: customer }).json();\n  },\n\n  // Requests\n  getAllRequests() {\n    return ky.get(requestUrl).json();\n  },\n  getRequestById(id) {\n    return ky.get(requestUrl + id).json();\n  },\n  createRequest(request) {\n    return ky.post(requestUrl, { json: request }).json();\n  },\n  updateRequest(request) {\n    return ky.put(requestUrl, { json: request }).json();\n  },\n  deleteRequest(id) {\n    return ky.delete(requestUrl + id);\n  },\n\n  // Parts\n  getAllParts() {\n    return ky.get(partUrl).json();\n  },\n  getPartById(id) {\n    return ky.get(partUrl + id).json();\n  },\n  createPart(part) {\n    return ky.post(partUrl, { json: part }).json();\n  },\n  updatePart(part) {\n    return ky.put(partUrl, { json: part }).json();\n  },\n  deletePart(id) {\n    return ky.delete(partUrl + id);\n  }\n}\n\nexport default API;"]},"metadata":{},"sourceType":"module"}