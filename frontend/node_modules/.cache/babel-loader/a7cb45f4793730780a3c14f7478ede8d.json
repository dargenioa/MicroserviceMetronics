{"ast":null,"code":"var _jsxFileName = \"/Users/amandadargenio/java-react/project/frontend/metronics-react-frontend/src/pages/InventoryPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport API from \"../API/index\";\nimport { useMutation, useQuery, useQueries, useQueryClient } from \"react-query\";\nimport ky from \"ky\";\nimport { SinglePartView, Searchbar, SideNavBar } from \"../components\";\nimport { set } from \"js-cookie\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function InventoryPage() {\n  _s();\n\n  const qc = useQueryClient();\n  const {\n    isLoading,\n    data\n  } = useQuery(\"fetchParts\", API.getAllParts, {\n    onSuccess: data => {// console.log(data);\n    }\n  });\n  const [viewingSinglePart, setViewingSinglePart] = useState(false);\n  const [singlePartInfo, setSinglePartInfo] = useState({});\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  useEffect(async () => {\n    // const response = await API.loggedIn(\"bob\", \"password\");\n    const result = await API.updatePart({\n      id: 12,\n      description: \"just an ordinary part\",\n      partNumber: \"32332\",\n      quantity: 45\n    });\n  }, []);\n\n  async function switchToSinglePartView(part) {\n    await setSinglePartInfo(part);\n    await setViewingSinglePart(true);\n  }\n\n  function returnToListView() {\n    // setSinglePartInfo({});\n    setViewingSinglePart(false);\n  }\n\n  async function submitChanges(partToChange) {\n    await API.updatePart(partToChange);\n    qc.invalidateQueries(\"fetchParts\");\n    setViewingSinglePart(false);\n  }\n\n  const incrementStockMutation = useMutation(async input => {\n    await API.updatePart(input);\n  }, {\n    onSuccess: async () => {\n      await qc.invalidateQueries(\"fetchParts\");\n    }\n  });\n\n  const onChangeAmount = async part => {\n    await incrementStockMutation.mutateAsync(part);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(SideNavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"inventory-page-wrapper container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-sm inventory-search-bar-wrapper\",\n          children: /*#__PURE__*/_jsxDEV(Searchbar, {\n            heading: \"Inventory Search\",\n            subheading: \"Search by part number or description\",\n            placeholder: \"Part # or description\",\n            setSearch: setSearchTerm,\n            children: \" \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), viewingSinglePart ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-sm\",\n          children: /*#__PURE__*/_jsxDEV(SinglePartView, {\n            part: singlePartInfo,\n            returnToListView: returnToListView,\n            submitChanges: submitChanges\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-sm\",\n          children: /*#__PURE__*/_jsxDEV(\"table\", {\n            className: \"table table-sm\",\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Part #\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 93,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Description\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 94,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  style: {\n                    textAlign: \"center\"\n                  },\n                  children: \"# In Inventory\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 95,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: isLoading ? /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: \"Loading...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 21\n              }, this) : data.filter(part => {\n                if (part.description != null) {\n                  if (part.partNumber.includes(searchTerm) || part.description.includes(searchTerm)) {\n                    return true;\n                  } else {\n                    return false;\n                  }\n                } else if (part.description === null && searchTerm === \"\") {\n                  return true;\n                } else {\n                  return false;\n                }\n              }).map(part => {\n                return /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    children: [\" \", part.partNumber, \" \"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 125,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: [\" \", part.description, \" \"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 126,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    style: {\n                      textAlign: \"center\"\n                    },\n                    children: [\" \", part.quantity, \" \"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 127,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: \"button-row\",\n                    style: {\n                      borderStyle: \"none\"\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                      type: \"button\",\n                      className: \"inventory-adjust-btn\",\n                      disabled: isLoading ? true : false,\n                      onClick: () => onChangeAmount({ ...part,\n                        quantity: part.quantity + 1\n                      }),\n                      children: \"\\u1403\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 135,\n                      columnNumber: 31\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      type: \"button\",\n                      className: \"inventory-adjust-btn\",\n                      onClick: () => onChangeAmount({ ...part,\n                        quantity: part.quantity - 1\n                      }),\n                      children: \"\\u1401\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 148,\n                      columnNumber: 31\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      type: \"button\",\n                      className: \"inventory-edit-btn\",\n                      onClick: () => switchToSinglePartView(part),\n                      children: \"\\u270E\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 160,\n                      columnNumber: 31\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 131,\n                    columnNumber: 29\n                  }, this)]\n                }, part.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 124,\n                  columnNumber: 27\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(InventoryPage, \"LjodhR/XgaY1u0tlUyxu11y9ZTk=\", false, function () {\n  return [useQueryClient, useQuery, useMutation];\n});\n\n_c = InventoryPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"InventoryPage\");","map":{"version":3,"sources":["/Users/amandadargenio/java-react/project/frontend/metronics-react-frontend/src/pages/InventoryPage.js"],"names":["React","useEffect","useState","API","useMutation","useQuery","useQueries","useQueryClient","ky","SinglePartView","Searchbar","SideNavBar","set","InventoryPage","qc","isLoading","data","getAllParts","onSuccess","viewingSinglePart","setViewingSinglePart","singlePartInfo","setSinglePartInfo","searchTerm","setSearchTerm","result","updatePart","id","description","partNumber","quantity","switchToSinglePartView","part","returnToListView","submitChanges","partToChange","invalidateQueries","incrementStockMutation","input","onChangeAmount","mutateAsync","textAlign","filter","includes","map","borderStyle"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport API from \"../API/index\";\nimport { useMutation, useQuery, useQueries, useQueryClient } from \"react-query\";\nimport ky from \"ky\";\n\nimport { SinglePartView, Searchbar, SideNavBar } from \"../components\";\nimport { set } from \"js-cookie\";\n\nexport default function InventoryPage() {\n  const qc = useQueryClient();\n  const { isLoading, data } = useQuery(\"fetchParts\", API.getAllParts, {\n    onSuccess: (data) => {\n      // console.log(data);\n    },\n  });\n  const [viewingSinglePart, setViewingSinglePart] = useState(false);\n  const [singlePartInfo, setSinglePartInfo] = useState({});\n  const [searchTerm, setSearchTerm] = useState(\"\");\n\n  useEffect(async () => {\n    // const response = await API.loggedIn(\"bob\", \"password\");\n\n    const result = await API.updatePart({\n      id: 12,\n      description: \"just an ordinary part\",\n      partNumber: \"32332\",\n      quantity: 45,\n    });\n  }, []);\n\n  async function switchToSinglePartView(part) {\n    await setSinglePartInfo(part);\n    await setViewingSinglePart(true);\n  }\n\n  function returnToListView() {\n    // setSinglePartInfo({});\n    setViewingSinglePart(false);\n  }\n\n  async function submitChanges(partToChange) {\n    await API.updatePart(partToChange);\n    qc.invalidateQueries(\"fetchParts\");\n    setViewingSinglePart(false);\n  }\n  const incrementStockMutation = useMutation(\n    async (input) => {\n      await API.updatePart(input);\n    },\n    {\n      onSuccess: async () => {\n        await qc.invalidateQueries(\"fetchParts\");\n      },\n    }\n  );\n\n  const onChangeAmount = async (part) => {\n    await incrementStockMutation.mutateAsync(part);\n  };\n\n  return (\n    <>\n      <SideNavBar />\n      <div className=\"inventory-page-wrapper container\">\n        <div className=\"row\">\n          <div className=\"col-sm inventory-search-bar-wrapper\">\n            <Searchbar\n              heading=\"Inventory Search\"\n              subheading=\"Search by part number or description\"\n              placeholder=\"Part # or description\"\n              setSearch={setSearchTerm}\n            >\n              {\" \"}\n            </Searchbar>\n          </div>\n        </div>\n        {viewingSinglePart ? (\n          <div className=\"row\">\n            <div className=\"col-sm\">\n              <SinglePartView\n                part={singlePartInfo}\n                returnToListView={returnToListView}\n                submitChanges={submitChanges}\n              ></SinglePartView>\n            </div>\n          </div>\n        ) : (\n          <div className=\"row\">\n            <div className=\"col-sm\">\n              <table className=\"table table-sm\">\n                <thead>\n                  <tr>\n                    <th>Part #</th>\n                    <th>Description</th>\n                    <th style={{ textAlign: \"center\" }}># In Inventory</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {isLoading ? (\n                    <tr>Loading...</tr>\n                  ) : (\n                    data\n                      .filter((part) => {\n                        if (part.description != null) {\n                          if (\n                            part.partNumber.includes(searchTerm) ||\n                            part.description.includes(searchTerm)\n                          ) {\n                            return true;\n                          } else {\n                            return false;\n                          }\n                        } else if (\n                          part.description === null &&\n                          searchTerm === \"\"\n                        ) {\n                          return true;\n                        } else {\n                          return false;\n                        }\n                      })\n                      .map((part) => {\n                        return (\n                          <tr key={part.id}>\n                            <td> {part.partNumber} </td>\n                            <td> {part.description} </td>\n                            <td style={{ textAlign: \"center\" }}>\n                              {\" \"}\n                              {part.quantity}{\" \"}\n                            </td>\n                            <td\n                              className=\"button-row\"\n                              style={{ borderStyle: \"none\" }}\n                            >\n                              <button\n                                type=\"button\"\n                                className=\"inventory-adjust-btn\"\n                                disabled={isLoading ? true : false}\n                                onClick={() =>\n                                  onChangeAmount({\n                                    ...part,\n                                    quantity: part.quantity + 1,\n                                  })\n                                }\n                              >\n                                ᐃ\n                              </button>\n                              <button\n                                type=\"button\"\n                                className=\"inventory-adjust-btn\"\n                                onClick={() =>\n                                  onChangeAmount({\n                                    ...part,\n                                    quantity: part.quantity - 1,\n                                  })\n                                }\n                              >\n                                ᐁ\n                              </button>\n                              <button\n                                type=\"button\"\n                                className=\"inventory-edit-btn\"\n                                onClick={() => switchToSinglePartView(part)}\n                              >\n                                ✎\n                              </button>\n                            </td>\n                          </tr>\n                        );\n                      })\n                  )}\n                </tbody>\n              </table>\n            </div>\n          </div>\n        )}\n      </div>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}