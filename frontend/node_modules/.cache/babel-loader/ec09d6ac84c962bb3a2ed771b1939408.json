{"ast":null,"code":"var _jsxFileName = \"/Users/amandadargenio/java-react/project/frontend/metronics-react-frontend/src/pages/RequestPage.js\",\n    _s = $RefreshSig$();\n\nimport { useQuery, useQueryClient } from 'react-query';\nimport { SideNavBar, Searchbar, RequestTable } from '../components';\nimport API from '../API';\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst fetchRequests = async () => await API.getAllRequests();\n\nconst RequestPage = () => {\n  _s();\n\n  const requests = useQuery('requests', fetchRequests);\n  const [search, setSearch] = useState('');\n  const [searchResults, setSearchResults] = useState(requests.data);\n  useEffect(() => {\n    if (search === '') {\n      setSearchResults(requests.data);\n      return;\n    }\n\n    let searchRequestList = [];\n\n    for (let request of requests.data) {\n      let name = request.customer.businessName.toLowerCase();\n      let invoice = request.invoiceNumber;\n      let date = request.dateCompleted;\n\n      if (name.indexOf(search) !== -1 || invoice.indexOf(search) !== -1 || date.indexOf(search) !== -1) {\n        searchRequestList.push(request);\n      }\n    }\n\n    setSearchResults(searchRequestList);\n  }, [search]);\n\n  switch (requests.status) {\n    case 'loading':\n      return /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-center my-5\",\n        children: \"Loading\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 14\n      }, this);\n\n    case 'error':\n      return /*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"text-center my-5\",\n        children: \"Oops, something went wrong!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 14\n      }, this);\n\n    default:\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(SideNavBar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"main-section\",\n          children: [/*#__PURE__*/_jsxDEV(Searchbar, {\n            heading: \"Service Request Search\",\n            subheading: \"Search by date completed or invoice number\",\n            placeholder: \"Date completed or invoice number\",\n            setSearch: setSearch\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(RequestTable, {\n            requests: searchResults\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true);\n  }\n};\n\n_s(RequestPage, \"TI9YK7AJNllhdx3eIV25nKEPfJ4=\", false, function () {\n  return [useQuery];\n});\n\n_c = RequestPage;\nexport default RequestPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"RequestPage\");","map":{"version":3,"sources":["/Users/amandadargenio/java-react/project/frontend/metronics-react-frontend/src/pages/RequestPage.js"],"names":["useQuery","useQueryClient","SideNavBar","Searchbar","RequestTable","API","useState","useEffect","fetchRequests","getAllRequests","RequestPage","requests","search","setSearch","searchResults","setSearchResults","data","searchRequestList","request","name","customer","businessName","toLowerCase","invoice","invoiceNumber","date","dateCompleted","indexOf","push","status"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,cAAnB,QAAyC,aAAzC;AACA,SAASC,UAAT,EAAqBC,SAArB,EAAgCC,YAAhC,QAAoD,eAApD;AACA,OAAOC,GAAP,MAAgB,QAAhB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;;;AAEA,MAAMC,aAAa,GAAG,YAAY,MAAMH,GAAG,CAACI,cAAJ,EAAxC;;AAEA,MAAMC,WAAW,GAAG,MAAM;AAAA;;AACxB,QAAMC,QAAQ,GAAGX,QAAQ,CAAC,UAAD,EAAaQ,aAAb,CAAzB;AACA,QAAM,CAACI,MAAD,EAASC,SAAT,IAAsBP,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACQ,aAAD,EAAgBC,gBAAhB,IAAoCT,QAAQ,CAACK,QAAQ,CAACK,IAAV,CAAlD;AAEAT,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIK,MAAM,KAAK,EAAf,EAAmB;AACjBG,MAAAA,gBAAgB,CAACJ,QAAQ,CAACK,IAAV,CAAhB;AACA;AACD;;AACD,QAAIC,iBAAiB,GAAG,EAAxB;;AACA,SAAK,IAAIC,OAAT,IAAoBP,QAAQ,CAACK,IAA7B,EAAmC;AACjC,UAAIG,IAAI,GAAGD,OAAO,CAACE,QAAR,CAAiBC,YAAjB,CAA8BC,WAA9B,EAAX;AAAwD,UAAIC,OAAO,GAAGL,OAAO,CAACM,aAAtB;AAAqC,UAAIC,IAAI,GAAGP,OAAO,CAACQ,aAAnB;;AAC7F,UAAIP,IAAI,CAACQ,OAAL,CAAaf,MAAb,MAAyB,CAAC,CAA1B,IAA+BW,OAAO,CAACI,OAAR,CAAgBf,MAAhB,MAA4B,CAAC,CAA5D,IAAiEa,IAAI,CAACE,OAAL,CAAaf,MAAb,MAAyB,CAAC,CAA/F,EAAkG;AAChGK,QAAAA,iBAAiB,CAACW,IAAlB,CAAuBV,OAAvB;AACD;AACF;;AACDH,IAAAA,gBAAgB,CAACE,iBAAD,CAAhB;AACD,GAbQ,EAaN,CAACL,MAAD,CAbM,CAAT;;AAeA,UAAQD,QAAQ,CAACkB,MAAjB;AACE,SAAK,SAAL;AACE,0BAAO;AAAI,QAAA,SAAS,EAAC,kBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;;AACF,SAAK,OAAL;AACE,0BAAO;AAAI,QAAA,SAAS,EAAC,kBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;;AACF;AACE,0BACE;AAAA,gCACE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAK,UAAA,SAAS,EAAC,cAAf;AAAA,kCACE,QAAC,SAAD;AACE,YAAA,OAAO,EAAC,wBADV;AAEE,YAAA,UAAU,EAAC,4CAFb;AAGE,YAAA,WAAW,EAAC,kCAHd;AAIE,YAAA,SAAS,EAAEhB;AAJb;AAAA;AAAA;AAAA;AAAA,kBADF,eAME,QAAC,YAAD;AACE,YAAA,QAAQ,EAAEC;AADZ;AAAA;AAAA;AAAA;AAAA,kBANF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA,sBADF;AANJ;AAqBD,CAzCD;;GAAMJ,W;UACaV,Q;;;KADbU,W;AA2CN,eAAeA,WAAf","sourcesContent":["import { useQuery, useQueryClient } from 'react-query';\nimport { SideNavBar, Searchbar, RequestTable } from '../components';\nimport API from '../API';\nimport { useState, useEffect } from 'react';\n\nconst fetchRequests = async () => await API.getAllRequests();\n\nconst RequestPage = () => {\n  const requests = useQuery('requests', fetchRequests);\n  const [search, setSearch] = useState('')\n  const [searchResults, setSearchResults] = useState(requests.data);\n\n  useEffect(() => {\n    if (search === '') {\n      setSearchResults(requests.data);\n      return;\n    }\n    let searchRequestList = [];\n    for (let request of requests.data) {\n      let name = request.customer.businessName.toLowerCase(); let invoice = request.invoiceNumber; let date = request.dateCompleted;\n      if (name.indexOf(search) !== -1 || invoice.indexOf(search) !== -1 || date.indexOf(search) !== -1) {\n        searchRequestList.push(request);\n      }\n    }\n    setSearchResults(searchRequestList);\n  }, [search]);\n\n  switch (requests.status) {\n    case 'loading':\n      return <h1 className=\"text-center my-5\">Loading</h1>;\n    case 'error':\n      return <h4 className=\"text-center my-5\">Oops, something went wrong!</h4>\n    default:\n      return (\n        <>\n          <SideNavBar />\n          <div className=\"main-section\">\n            <Searchbar \n              heading=\"Service Request Search\"\n              subheading=\"Search by date completed or invoice number\"\n              placeholder=\"Date completed or invoice number\"\n              setSearch={setSearch} />\n            <RequestTable \n              requests={searchResults} />\n          </div>\n        </>\n      )\n  }\n}\n\nexport default RequestPage;"]},"metadata":{},"sourceType":"module"}