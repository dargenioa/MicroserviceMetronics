{"ast":null,"code":"import ky from 'ky';\nimport Cookies from 'js-cookie';\nconst customerUrl = 'http://localhost:5557/api/customer/';\nconst requestUrl = 'http://localhost:5557/api/requests/';\nconst partUrl = 'http://localhost:5557/api/part/';\nconst loginUrl = 'http://localhost:5557/api/loggedIn/';\nconst API = {\n  // Customers\n  getAllCustomers() {\n    return ky.get(customerUrl, { ...this.options\n    }).json();\n  },\n\n  getCustomerById(id) {\n    return ky.get(customerUrl + id, { ...this.options\n    }).json();\n  },\n\n  createCustomer(customer) {\n    return ky.post(customerUrl, {\n      json: customer,\n      ...this.options\n    }).json();\n  },\n\n  updateCustomer(customer, id) {\n    return ky.put(customerUrl + id, {\n      json: customer,\n      ...this.options\n    }).json();\n  },\n\n  deleteCustomer(customer, id) {\n    return ky.delete(customerUrl + id, {\n      json: customer,\n      ...this.options\n    }).json();\n  },\n\n  // Requests\n  getAllRequests() {\n    return ky.get(requestUrl, { ...this.options\n    }).json();\n  },\n\n  getRequestById(id) {\n    return ky.get(requestUrl + id, { ...this.options\n    }).json();\n  },\n\n  createRequest(request) {\n    return ky.post(requestUrl, {\n      json: request,\n      ...this.options\n    }).json();\n  },\n\n  updateRequest(request) {\n    return ky.put(requestUrl, {\n      json: request,\n      ...this.options\n    }).json();\n  },\n\n  deleteRequest(id) {\n    return ky.delete(requestUrl + id, { ...this.options\n    });\n  },\n\n  // Parts\n  getAllParts() {\n    return ky.get(partUrl, { ...this.options\n    }).json();\n  },\n\n  getPartById(id) {\n    return ky.get(partUrl + id, { ...this.options\n    }).json();\n  },\n\n  createPart(part) {\n    return ky.post(partUrl, {\n      json: part,\n      ...this.options\n    }).json();\n  },\n\n  updatePart(part) {\n    console.log({ ...this.options,\n      json: part\n    });\n    return ky.put(partUrl, { ...this.options,\n      json: part\n    });\n  },\n\n  deletePart(id) {\n    return ky.delete(partUrl + id, { ...this.options\n    });\n  },\n\n  async loggedIn(username, password) {\n    const authToken = btoa(`${username}:${password}`);\n    const response = await fetch('http://localhost:5557/api/loggedIn', {\n      headers: {\n        'Authorization': `Basic ${authToken}`\n      },\n      credentials: \"include\"\n    });\n  },\n\n  options: {\n    headers: {\n      'X-XSRF-TOKEN': Cookies.get('XSRF-TOKEN')\n    },\n    credentials: 'include'\n  }\n};\nexport default API;","map":{"version":3,"sources":["/Users/amandadargenio/java-react/project/frontend/metronics-react-frontend/src/API/index.js"],"names":["ky","Cookies","customerUrl","requestUrl","partUrl","loginUrl","API","getAllCustomers","get","options","json","getCustomerById","id","createCustomer","customer","post","updateCustomer","put","deleteCustomer","delete","getAllRequests","getRequestById","createRequest","request","updateRequest","deleteRequest","getAllParts","getPartById","createPart","part","updatePart","console","log","deletePart","loggedIn","username","password","authToken","btoa","response","fetch","headers","credentials"],"mappings":"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","sourcesContent":["import ky from 'ky';\nimport Cookies from 'js-cookie';\n\nconst customerUrl = 'http://localhost:5557/api/customer/';\nconst requestUrl = 'http://localhost:5557/api/requests/';\nconst partUrl = 'http://localhost:5557/api/part/';\nconst loginUrl = 'http://localhost:5557/api/loggedIn/';\n\nconst API = {\n  // Customers\n  getAllCustomers() {\n    return ky.get(customerUrl, { ...this.options }).json();\n  },\n  getCustomerById(id) {\n    return ky.get(customerUrl + id, { ...this.options }).json();\n  },\n  createCustomer(customer) {\n    return ky.post(customerUrl, { json: customer, ...this.options }).json();\n  },\n  updateCustomer(customer, id) {\n    return ky.put(customerUrl + id, { json: customer, ...this.options }).json();\n  },\n  deleteCustomer(customer, id) {\n    return ky.delete(customerUrl + id, { json: customer, ...this.options }).json();\n  },\n\n  // Requests\n  getAllRequests() {\n    return ky.get(requestUrl, { ...this.options }).json();\n  },\n  getRequestById(id) {\n    return ky.get(requestUrl + id, { ...this.options }).json();\n  },\n  createRequest(request) {\n    return ky.post(requestUrl, { json: request, ...this.options }).json();\n  },\n  updateRequest(request) {\n    return ky.put(requestUrl, { json: request, ...this.options }).json();\n  },\n  deleteRequest(id,) {\n    return ky.delete(requestUrl + id, { ...this.options });\n  },\n\n  // Parts\n  getAllParts() {\n    return ky.get(partUrl, { ...this.options }).json();\n  },\n  getPartById(id) {\n    return ky.get(partUrl + id, { ...this.options }).json();\n  },\n  createPart(part) {\n    return ky.post(partUrl, { json: part, ...this.options }).json();\n  },\n  updatePart(part) {\n    console.log({...this.options, json:part})\n    return ky.put(partUrl, { ...this.options, json:part });\n  },\n  deletePart(id) {\n    return ky.delete(partUrl + id, { ...this.options });\n  },\n  async loggedIn(username, password) {\n    const authToken = btoa(`${username}:${password}`);\n    const response = await fetch('http://localhost:5557/api/loggedIn', {\n      headers: {\n        'Authorization': `Basic ${authToken}`\n      },\n      credentials: \"include\"\n    })\n\n\n  },\n  options: {\n    headers: {\n      'X-XSRF-TOKEN': Cookies.get('XSRF-TOKEN')\n    },\n    credentials: 'include'\n  }\n}\n\nexport default API;"]},"metadata":{},"sourceType":"module"}