{"ast":null,"code":"var _jsxFileName = \"/Users/amandadargenio/java-react/project/frontend/metronics-react-frontend/src/components/ViewModel.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { useLocation } from \"react-router-dom\"; // import { useQuery, useQueryClient } from \"react-query\";\n\nimport API from \"../API\"; // import { SideNavBar, Searchbar } from \"../components\";\n// const fetchModel = async () => await API.getViewModel();\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ViewModel() {\n  _s();\n\n  const [modelResults, setModelResults] = useState({}); // const [viewmodel, setViewModelState] = useState();\n  // const [results, setResults] = useState();\n\n  const [selectCustomer, setSelectCustomerState] = useState();\n  const location = useLocation();\n  const viewModel = []; // console.log(\"DATA\");\n  // console.log(modelResults.data.data);\n  // const queryClient = useQueryClient();\n\n  const filterView = () => {\n    for (let i = 0; i < modelResults.length; i++) {\n      if (modelResults[i].customerId === selectCustomer) {\n        viewModel.push(modelResults[i]);\n      }\n    }\n\n    console.log; // modelResults.forEach((v) => {\n    //   v.customerId === selectCustomer\n    //     ? setViewModelState(v) : console.log(\"hello\")\n    // });\n    //get all requests and if the request customerId is === selected customer, return the list of requests\n    //get customer by id using selected customer\n  };\n\n  useEffect(async () => {\n    ;\n    await setSelectCustomerState(location.state.setCustomer);\n    await API.getViewModel().then(res => {\n      setModelResults(res.data);\n    });\n    await filterView();\n    console.log(location.state.setCustomer);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Hello dATA\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 10\n  }, this);\n}\n\n_s(ViewModel, \"DrWzniDXh7KYXkeA4PEQsvdu2lU=\", false, function () {\n  return [useLocation];\n});\n\n_c = ViewModel;\nexport default ViewModel;\n\nvar _c;\n\n$RefreshReg$(_c, \"ViewModel\");","map":{"version":3,"sources":["/Users/amandadargenio/java-react/project/frontend/metronics-react-frontend/src/components/ViewModel.js"],"names":["useEffect","useState","useLocation","API","ViewModel","modelResults","setModelResults","selectCustomer","setSelectCustomerState","location","viewModel","filterView","i","length","customerId","push","console","log","state","setCustomer","getViewModel","then","res","data"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,WAAT,QAA4B,kBAA5B,C,CACA;;AACA,OAAOC,GAAP,MAAgB,QAAhB,C,CACA;AAEA;;;;AAEA,SAASC,SAAT,GAAqB;AAAA;;AACnB,QAAM,CAAEC,YAAF,EAAgBC,eAAhB,IAAoCL,QAAQ,CAAC,EAAD,CAAlD,CADmB,CAEnB;AACA;;AACA,QAAM,CAACM,cAAD,EAAiBC,sBAAjB,IAA2CP,QAAQ,EAAzD;AACA,QAAMQ,QAAQ,GAAGP,WAAW,EAA5B;AACA,QAAMQ,SAAS,GAAG,EAAlB,CANmB,CAQnB;AACA;AAEA;;AAEA,QAAMC,UAAU,GAAG,MAAM;AAEvB,SAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGP,YAAY,CAACQ,MAAhC,EAAwCD,CAAC,EAAzC,EAA6C;AAC3C,UAAIP,YAAY,CAACO,CAAD,CAAZ,CAAgBE,UAAhB,KAA+BP,cAAnC,EAAmD;AAC/CG,QAAAA,SAAS,CAACK,IAAV,CAAeV,YAAY,CAACO,CAAD,CAA3B;AACH;AACF;;AAEDI,IAAAA,OAAO,CAACC,GAAR,CARuB,CAUvB;AACA;AACA;AACA;AACA;AACA;AACD,GAhBD;;AAkBAjB,EAAAA,SAAS,CAAC,YAAY;AAAC;AACtB,UAAMQ,sBAAsB,CAACC,QAAQ,CAACS,KAAT,CAAeC,WAAhB,CAA5B;AAEA,UAAMhB,GAAG,CAACiB,YAAJ,GACLC,IADK,CACCC,GAAD,IAAS;AACbhB,MAAAA,eAAe,CAACgB,GAAG,CAACC,IAAL,CAAf;AACD,KAHK,CAAN;AAKA,UAAMZ,UAAU,EAAhB;AAECK,IAAAA,OAAO,CAACC,GAAR,CAAYR,QAAQ,CAACS,KAAT,CAAeC,WAA3B;AACD,GAXQ,EAWN,EAXM,CAAT;AAaA,sBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;GA7CQf,S;UAKUF,W;;;KALVE,S;AA+CT,eAAeA,SAAf","sourcesContent":["import { useEffect, useState } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n// import { useQuery, useQueryClient } from \"react-query\";\nimport API from \"../API\";\n// import { SideNavBar, Searchbar } from \"../components\";\n\n// const fetchModel = async () => await API.getViewModel();\n\nfunction ViewModel() {\n  const [ modelResults, setModelResults ] = useState({});\n  // const [viewmodel, setViewModelState] = useState();\n  // const [results, setResults] = useState();\n  const [selectCustomer, setSelectCustomerState] = useState();\n  const location = useLocation();\n  const viewModel = [];\n\n  // console.log(\"DATA\");\n  // console.log(modelResults.data.data);\n\n  // const queryClient = useQueryClient();\n\n  const filterView = () => {\n\n    for(let i = 0; i < modelResults.length; i++) {\n      if (modelResults[i].customerId === selectCustomer) {\n          viewModel.push(modelResults[i]);\n      }\n    }\n\n    console.log\n\n    // modelResults.forEach((v) => {\n    //   v.customerId === selectCustomer\n    //     ? setViewModelState(v) : console.log(\"hello\")\n    // });\n    //get all requests and if the request customerId is === selected customer, return the list of requests\n    //get customer by id using selected customer\n  };\n\n  useEffect(async () => {;\n   await setSelectCustomerState(location.state.setCustomer)\n   \n   await API.getViewModel()\n   .then((res) => {\n     setModelResults(res.data)\n   })\n\n   await filterView();\n\n    console.log(location.state.setCustomer);\n  }, []);\n\n  return <div>Hello dATA</div>;\n}\n\nexport default ViewModel;\n"]},"metadata":{},"sourceType":"module"}