{"ast":null,"code":"var _jsxFileName = \"/Users/amandadargenio/java-react/project/frontend/metronics-react-frontend/src/components/ViewModel.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { useQuery, useQueryClient } from \"react-query\";\nimport API from \"../API\"; // import { SideNavBar, Searchbar } from \"../components\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst fetchModel = async () => await API.getViewModel();\n\nfunction ViewModel() {\n  _s();\n\n  const modelResults = use;\n  const [viewmodel, setViewModelState] = useState({});\n  const [selectCustomer, setSelectCustomerState] = useState();\n  const location = useLocation();\n  console.log(\"DATA\");\n  console.log(viewmodel.data);\n  const queryClient = useQueryClient(); // const mapView = () => {\n  //     viewmodel.map(v => {\n  //         v.customer.id === 1 ? setSelectCustomerState(v) : console.log(\"error\")\n  //     });\n  // }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  useEffect(async () => {\n    // await API.getViewModel()\n    // .then((res) => {\n    //     setViewModelState(res.data);\n    // });\n    // await mapView();\n    setSelectCustomerState(location.state.setCustomer);\n    console.log(location.state.setCustomer);\n  }, []); //   useEffect(async ()=> {\n  //     await viewmodel;\n  //     vi\n  //   }, [])\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Hello dATA\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 10\n  }, this);\n}\n\n_s(ViewModel, \"VgERjm+Gc2N3JYbRBWtLryBKUks=\", false, function () {\n  return [useLocation, useQueryClient];\n});\n\n_c = ViewModel;\nexport default ViewModel;\n\nvar _c;\n\n$RefreshReg$(_c, \"ViewModel\");","map":{"version":3,"sources":["/Users/amandadargenio/java-react/project/frontend/metronics-react-frontend/src/components/ViewModel.js"],"names":["useEffect","useState","useLocation","useQuery","useQueryClient","API","fetchModel","getViewModel","ViewModel","modelResults","use","viewmodel","setViewModelState","selectCustomer","setSelectCustomerState","location","console","log","data","queryClient","state","setCustomer"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SAASC,QAAT,EAAmBC,cAAnB,QAAyC,aAAzC;AACA,OAAOC,GAAP,MAAgB,QAAhB,C,CACA;;;;AAEA,MAAMC,UAAU,GAAG,YAAY,MAAMD,GAAG,CAACE,YAAJ,EAArC;;AAEA,SAASC,SAAT,GAAqB;AAAA;;AACnB,QAAMC,YAAY,GAAGC,GAArB;AACA,QAAM,CAACC,SAAD,EAAYC,iBAAZ,IAAiCX,QAAQ,CAAC,EAAD,CAA/C;AACA,QAAM,CAACY,cAAD,EAAiBC,sBAAjB,IAA2Cb,QAAQ,EAAzD;AACA,QAAMc,QAAQ,GAAGb,WAAW,EAA5B;AACEc,EAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAYN,SAAS,CAACO,IAAtB;AAEA,QAAMC,WAAW,GAAGf,cAAc,EAAlC,CARiB,CAUnB;AACA;AACA;AACA;AACA;AAEA;;AACAJ,EAAAA,SAAS,CAAC,YAAY;AACpB;AACA;AACA;AACA;AAEA;AACAc,IAAAA,sBAAsB,CAACC,QAAQ,CAACK,KAAT,CAAeC,WAAhB,CAAtB;AACAL,IAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACK,KAAT,CAAeC,WAA3B;AACD,GATQ,EASN,EATM,CAAT,CAjBmB,CA4BnB;AACA;AAEA;AAEA;;AAEA,sBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;GApCQb,S;UAIUN,W,EAIKE,c;;;KARfI,S;AAsCT,eAAeA,SAAf","sourcesContent":["import { useEffect, useState } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { useQuery, useQueryClient } from \"react-query\";\nimport API from \"../API\";\n// import { SideNavBar, Searchbar } from \"../components\";\n\nconst fetchModel = async () => await API.getViewModel();\n\nfunction ViewModel() {\n  const modelResults = use\n  const [viewmodel, setViewModelState] = useState({});\n  const [selectCustomer, setSelectCustomerState] = useState();\n  const location = useLocation();\n    console.log(\"DATA\");\n    console.log(viewmodel.data);\n\n    const queryClient = useQueryClient();\n\n  // const mapView = () => {\n  //     viewmodel.map(v => {\n  //         v.customer.id === 1 ? setSelectCustomerState(v) : console.log(\"error\")\n  //     });\n  // }\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  useEffect(async () => {\n    // await API.getViewModel()\n    // .then((res) => {\n    //     setViewModelState(res.data);\n    // });\n\n    // await mapView();\n    setSelectCustomerState(location.state.setCustomer)\n    console.log(location.state.setCustomer);\n  }, []);\n\n  //   useEffect(async ()=> {\n  //     await viewmodel;\n\n  //     vi\n\n  //   }, [])\n\n  return <div>Hello dATA</div>;\n}\n\nexport default ViewModel;\n"]},"metadata":{},"sourceType":"module"}