{"ast":null,"code":"var _jsxFileName = \"/Users/amandadargenio/java-react/project/frontend/metronics-react-frontend/src/pages/RequestPage.js\",\n    _s = $RefreshSig$();\n\nimport { useQuery, useQueryClient } from 'react-query';\nimport { SideNavBar, Searchbar, RequestTable } from '../components';\nimport API from '../API';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst fetchRequests = async () => await API.getAllRequests();\n\nconst RequestPage = () => {\n  _s();\n\n  const requests = useQuery('requests', fetchRequests);\n  console.log(requests);\n  const queryClient = useQueryClient();\n\n  switch (requests.status) {\n    case 'loading':\n      return /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-center my-5\",\n        children: \"Loading\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 14\n      }, this);\n\n    case 'error':\n      return /*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"text-center my-5\",\n        children: \"Oops, something went wrong!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 14\n      }, this);\n\n    default:\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(SideNavBar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"main-section\",\n          children: [/*#__PURE__*/_jsxDEV(Searchbar, {\n            heading: \"Service Request Search\",\n            subheading: \"Search by date completed or invoice number\",\n            placeholder: \"Date completed or invoice number\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(RequestTable, {\n            requests: requests.data\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true);\n  }\n};\n\n_s(RequestPage, \"8Snygq0P98aS0dKOGtc/u70Fl10=\", false, function () {\n  return [useQuery, useQueryClient];\n});\n\n_c = RequestPage;\nexport default RequestPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"RequestPage\");","map":{"version":3,"sources":["/Users/amandadargenio/java-react/project/frontend/metronics-react-frontend/src/pages/RequestPage.js"],"names":["useQuery","useQueryClient","SideNavBar","Searchbar","RequestTable","API","fetchRequests","getAllRequests","RequestPage","requests","console","log","queryClient","status","data"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,cAAnB,QAAyC,aAAzC;AACA,SAASC,UAAT,EAAqBC,SAArB,EAAgCC,YAAhC,QAAoD,eAApD;AACA,OAAOC,GAAP,MAAgB,QAAhB;;;;AAEA,MAAMC,aAAa,GAAG,YAAY,MAAMD,GAAG,CAACE,cAAJ,EAAxC;;AAEA,MAAMC,WAAW,GAAG,MAAM;AAAA;;AACxB,QAAMC,QAAQ,GAAGT,QAAQ,CAAC,UAAD,EAAaM,aAAb,CAAzB;AACAI,EAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AAEA,QAAMG,WAAW,GAAGX,cAAc,EAAlC;;AAEA,UAAQQ,QAAQ,CAACI,MAAjB;AACE,SAAK,SAAL;AACE,0BAAO;AAAI,QAAA,SAAS,EAAC,kBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;;AACF,SAAK,OAAL;AACE,0BAAO;AAAI,QAAA,SAAS,EAAC,kBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;;AACF;AACE,0BACE;AAAA,gCACE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAK,UAAA,SAAS,EAAC,cAAf;AAAA,kCACE,QAAC,SAAD;AACE,YAAA,OAAO,EAAC,wBADV;AAEE,YAAA,UAAU,EAAC,4CAFb;AAGE,YAAA,WAAW,EAAC;AAHd;AAAA;AAAA;AAAA;AAAA,kBADF,eAKE,QAAC,YAAD;AACE,YAAA,QAAQ,EAAEJ,QAAQ,CAACK;AADrB;AAAA;AAAA;AAAA;AAAA,kBALF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA,sBADF;AANJ;AAoBD,CA1BD;;GAAMN,W;UACaR,Q,EAGGC,c;;;KAJhBO,W;AA4BN,eAAeA,WAAf","sourcesContent":["import { useQuery, useQueryClient } from 'react-query';\nimport { SideNavBar, Searchbar, RequestTable } from '../components';\nimport API from '../API';\n\nconst fetchRequests = async () => await API.getAllRequests();\n\nconst RequestPage = () => {\n  const requests = useQuery('requests', fetchRequests);\n  console.log(requests);\n\n  const queryClient = useQueryClient();\n\n  switch (requests.status) {\n    case 'loading':\n      return <h1 className=\"text-center my-5\">Loading</h1>;\n    case 'error':\n      return <h4 className=\"text-center my-5\">Oops, something went wrong!</h4>\n    default:\n      return (\n        <>\n          <SideNavBar />\n          <div className=\"main-section\">\n            <Searchbar \n              heading=\"Service Request Search\"\n              subheading=\"Search by date completed or invoice number\"\n              placeholder=\"Date completed or invoice number\"/>\n            <RequestTable \n              requests={requests.data}/>\n          </div>\n        </>\n      )\n  }\n}\n\nexport default RequestPage;"]},"metadata":{},"sourceType":"module"}