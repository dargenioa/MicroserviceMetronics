{"ast":null,"code":"var _jsxFileName = \"/Users/amandadargenio/java-react/project/frontend/metronics-react-frontend/src/components/ViewModel.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { useQuery, useQueryClient } from \"react-query\";\nimport API from \"../API\"; // import { SideNavBar, Searchbar } from \"../components\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst fetchModel = async () => await API.getViewModel();\n\nfunction ViewModel() {\n  _s();\n\n  const modelResults = useQuery(\"modelResults\", fetchModel, {\n    onSuccess: () => {\n      console.log(data);\n    }\n  });\n  const [viewmodel, setViewModelState] = useState();\n  const [results, setResults] = useState({});\n  const [selectCustomer, setSelectCustomerState] = useState();\n  const location = useLocation();\n  console.log(\"DATA\");\n  console.log(modelResults.data.data);\n  const queryClient = useQueryClient();\n\n  const filterView = () => {// results.filter(v => {\n    //      v.customer.id === selectCustomer ? setViewModelState(v) : console.log(\"not valid\")\n    //   });\n    //get all requests and if the request customerId is === selected customer, return the list of requests\n    //get customer by id using selected customer\n    // for(let i = 0; i<results.length; i++) {\n    //   if (results[i].customer.id === selectCustomer) {\n    //   setViewModelState(...results[i])\n    //   }\n    // }\n  };\n\n  useEffect(async () => {\n    ;\n    await setSelectCustomerState(location.state.setCustomer); //  await filterView();\n\n    console.log(location.state.setCustomer);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Hello dATA\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 10\n  }, this);\n}\n\n_s(ViewModel, \"Rt/IFBiKS2zbYETNAKV4VR6FH+c=\", false, function () {\n  return [useQuery, useLocation, useQueryClient];\n});\n\n_c = ViewModel;\nexport default ViewModel;\n\nvar _c;\n\n$RefreshReg$(_c, \"ViewModel\");","map":{"version":3,"sources":["/Users/amandadargenio/java-react/project/frontend/metronics-react-frontend/src/components/ViewModel.js"],"names":["useEffect","useState","useLocation","useQuery","useQueryClient","API","fetchModel","getViewModel","ViewModel","modelResults","onSuccess","console","log","data","viewmodel","setViewModelState","results","setResults","selectCustomer","setSelectCustomerState","location","queryClient","filterView","state","setCustomer"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SAASC,QAAT,EAAmBC,cAAnB,QAAyC,aAAzC;AACA,OAAOC,GAAP,MAAgB,QAAhB,C,CACA;;;;AAEA,MAAMC,UAAU,GAAG,YAAY,MAAMD,GAAG,CAACE,YAAJ,EAArC;;AAEA,SAASC,SAAT,GAAqB;AAAA;;AACnB,QAAMC,YAAY,GAAGN,QAAQ,CAAC,cAAD,EAAiBG,UAAjB,EAA6B;AACxDI,IAAAA,SAAS,EAAE,MAAK;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYC,IAAZ;AACD;AAHuD,GAA7B,CAA7B;AAKA,QAAM,CAACC,SAAD,EAAYC,iBAAZ,IAAiCd,QAAQ,EAA/C;AACD,QAAM,CAACe,OAAD,EAAUC,UAAV,IAAwBhB,QAAQ,CAAC,EAAD,CAAtC;AACC,QAAM,CAACiB,cAAD,EAAiBC,sBAAjB,IAA2ClB,QAAQ,EAAzD;AACA,QAAMmB,QAAQ,GAAGlB,WAAW,EAA5B;AAEES,EAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAYH,YAAY,CAACI,IAAb,CAAkBA,IAA9B;AAEA,QAAMQ,WAAW,GAAGjB,cAAc,EAAlC;;AAEF,QAAMkB,UAAU,GAAG,MAAM,CACvB;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAED,GAdD;;AAgBAtB,EAAAA,SAAS,CAAC,YAAY;AAAC;AACtB,UAAMmB,sBAAsB,CAACC,QAAQ,CAACG,KAAT,CAAeC,WAAhB,CAA5B,CADqB,CAEtB;;AACEb,IAAAA,OAAO,CAACC,GAAR,CAAYQ,QAAQ,CAACG,KAAT,CAAeC,WAA3B;AACD,GAJQ,EAIN,EAJM,CAAT;AAOA,sBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;GAxCQhB,S;UACcL,Q,EAQJD,W,EAKKE,c;;;KAdfI,S;AA0CT,eAAeA,SAAf","sourcesContent":["import { useEffect, useState } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { useQuery, useQueryClient } from \"react-query\";\nimport API from \"../API\";\n// import { SideNavBar, Searchbar } from \"../components\";\n\nconst fetchModel = async () => await API.getViewModel();\n\nfunction ViewModel() {\n  const modelResults = useQuery(\"modelResults\", fetchModel, {\n    onSuccess: () =>{\n      console.log(data)\n    }\n  }); \n  const [viewmodel, setViewModelState] = useState();\n const [results, setResults] = useState({});\n  const [selectCustomer, setSelectCustomerState] = useState();\n  const location = useLocation();\n\n    console.log(\"DATA\");\n    console.log(modelResults.data.data);\n\n    const queryClient = useQueryClient();\n\n  const filterView = () => {\n    // results.filter(v => {\n    //      v.customer.id === selectCustomer ? setViewModelState(v) : console.log(\"not valid\")\n    //   });\n\n    //get all requests and if the request customerId is === selected customer, return the list of requests\n    //get customer by id using selected customer\n\n    // for(let i = 0; i<results.length; i++) {\n    //   if (results[i].customer.id === selectCustomer) {\n    //   setViewModelState(...results[i])\n    //   }\n    // }\n\n  }\n\n  useEffect(async () => {;\n   await setSelectCustomerState(location.state.setCustomer)\n  //  await filterView();\n    console.log(location.state.setCustomer);\n  }, []);\n\n\n  return <div>Hello dATA</div>;\n}\n\nexport default ViewModel;\n"]},"metadata":{},"sourceType":"module"}