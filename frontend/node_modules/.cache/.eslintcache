[{"/Users/amandadargenio/java-react/project/frontend/metronics-react-frontend/src/index.js":"1","/Users/amandadargenio/java-react/project/frontend/metronics-react-frontend/src/App.js":"2","/Users/amandadargenio/java-react/project/frontend/metronics-react-frontend/src/pages/Customers.js":"3","/Users/amandadargenio/java-react/project/frontend/metronics-react-frontend/src/API/index.js":"4","/Users/amandadargenio/java-react/project/frontend/metronics-react-frontend/src/components/Col/Col.js":"5","/Users/amandadargenio/java-react/project/frontend/metronics-react-frontend/src/components/Row/Row.js":"6","/Users/amandadargenio/java-react/project/frontend/metronics-react-frontend/src/components/Container/Container.js":"7","/Users/amandadargenio/java-react/project/frontend/metronics-react-frontend/src/components/index.js":"8","/Users/amandadargenio/java-react/project/frontend/metronics-react-frontend/src/components/Header/index.js":"9","/Users/amandadargenio/java-react/project/frontend/metronics-react-frontend/src/pages/index.js":"10","/Users/amandadargenio/java-react/project/frontend/metronics-react-frontend/src/pages/InventoryPage.js":"11","/Users/amandadargenio/java-react/project/frontend/metronics-react-frontend/src/pages/HomePage.js":"12","/Users/amandadargenio/java-react/project/frontend/metronics-react-frontend/src/components/LoginForm/index.js":"13","/Users/amandadargenio/java-react/project/frontend/metronics-react-frontend/src/pages/RequestPage.js":"14","/Users/amandadargenio/java-react/project/frontend/metronics-react-frontend/src/components/Searchbar.js":"15","/Users/amandadargenio/java-react/project/frontend/metronics-react-frontend/src/components/SideNavbar.js":"16","/Users/amandadargenio/java-react/project/frontend/metronics-react-frontend/src/components/RequestTable.js":"17","/Users/amandadargenio/java-react/project/frontend/metronics-react-frontend/src/components/CustomersTable.js":"18","/Users/amandadargenio/java-react/project/frontend/metronics-react-frontend/src/components/ViewModel.js":"19","/Users/amandadargenio/java-react/project/frontend/metronics-react-frontend/src/components/CustomerSearchBar.js":"20","/Users/amandadargenio/java-react/project/frontend/metronics-react-frontend/src/components/SinglePartView.js":"21","/Users/amandadargenio/java-react/project/frontend/metronics-react-frontend/src/components/QuickActions.js":"22","/Users/amandadargenio/java-react/project/frontend/metronics-react-frontend/src/components/PartsWarning.js":"23","/Users/amandadargenio/java-react/project/frontend/metronics-react-frontend/src/components/NewRequests.js":"24","/Users/amandadargenio/java-react/project/frontend/metronics-react-frontend/src/pages/InventoryAddPart.js":"25"},{"size":197,"mtime":1624641310792,"results":"26","hashOfConfig":"27"},{"size":1082,"mtime":1624829186062,"results":"28","hashOfConfig":"27"},{"size":3107,"mtime":1624763036919,"results":"29","hashOfConfig":"27"},{"size":2532,"mtime":1624763036916,"results":"30","hashOfConfig":"27"},{"size":238,"mtime":1624641352910,"results":"31","hashOfConfig":"27"},{"size":158,"mtime":1624641376032,"results":"32","hashOfConfig":"27"},{"size":176,"mtime":1624641366128,"results":"33","hashOfConfig":"27"},{"size":466,"mtime":1624763036919,"results":"34","hashOfConfig":"27"},{"size":278,"mtime":1624656123401,"results":"35","hashOfConfig":"27"},{"size":410,"mtime":1624829186064,"results":"36","hashOfConfig":"27"},{"size":6132,"mtime":1624763036921,"results":"37","hashOfConfig":"27"},{"size":1020,"mtime":1624763036920,"results":"38","hashOfConfig":"27"},{"size":3012,"mtime":1624762182284,"results":"39","hashOfConfig":"27"},{"size":1680,"mtime":1624763036922,"results":"40","hashOfConfig":"27"},{"size":615,"mtime":1624763036918,"results":"41","hashOfConfig":"27"},{"size":652,"mtime":1624732169627,"results":"42","hashOfConfig":"27"},{"size":2323,"mtime":1624743821404,"results":"43","hashOfConfig":"27"},{"size":1971,"mtime":1624822790628,"results":"44","hashOfConfig":"27"},{"size":2866,"mtime":1624828911245,"results":"45","hashOfConfig":"27"},{"size":634,"mtime":1624747250797,"results":"46","hashOfConfig":"27"},{"size":1844,"mtime":1624747978333,"results":"47","hashOfConfig":"27"},{"size":557,"mtime":1624829186063,"results":"48","hashOfConfig":"27"},{"size":969,"mtime":1624763036917,"results":"49","hashOfConfig":"27"},{"size":1316,"mtime":1624763036917,"results":"50","hashOfConfig":"27"},{"size":3329,"mtime":1624829186063,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"gettj4",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"54"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"54"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"54"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"54"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"54"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"54"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"54"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"54"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"54"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114"},"/Users/amandadargenio/java-react/project/frontend/metronics-react-frontend/src/index.js",[],["115","116"],"/Users/amandadargenio/java-react/project/frontend/metronics-react-frontend/src/App.js",[],"/Users/amandadargenio/java-react/project/frontend/metronics-react-frontend/src/pages/Customers.js",["117","118","119"],"/* eslint-disable react-hooks/exhaustive-deps */\nimport { useQuery, useQueryClient } from \"react-query\";\n// import React, { useEffect, useState } from \"react\";\nimport { SideNavBar, CustomerSearchBar } from '../components';\nimport CustomersTable from \"../components/CustomersTable\";\nimport API from \"../API\";\nimport { useState } from \"react\";\n\nconst fetchCustomers = async () => await API.getAllCustomers();\n\nfunction Customers() {\n  const customers = useQuery(\"customers\", fetchCustomers,{\n    onSuccess: () =>{\n      setSearchResults(customers.data)\n    }\n  });\n  const [ data, setData ] = useState();\n  const [ search, setSearch ] = useState();\n  const [ searchResults, setSearchResults ] = useState(customers.data);\n\n  console.log(\"==== CUSTOMER DATA ====\");\n  console.log(customers.data);\n  console.log(\"==== SEARCH DATA ====\");\n  console.log(searchResults);\n\n  const queryClient = useQueryClient();\n\n  // useEffect(async ()=>{\n  //   fetchCustomers();\n  // }, []);\n\n  const handleInputChange = (event) => {\n    setSearch(event.target.value);\n  };\n\n  const handleSearch = async (event) => {\n    event.preventDefault();\n\n    const results = customers.data.filter((c) => {\n      return (\n        c.businessName.includes(search) ||\n        c.contactName.includes(search) ||\n        c.street.includes(search) ||\n        c.city.includes(search) ||\n        c.state.includes(search) ||\n        c.zipcode.includes(search)||\n        c.phone.includes(search)\n      );\n    });\n    console.log(results);\n    setSearchResults(results);\n  };\n\n  // useEffect(async ()=>{\n  // const result = await API.createCustomer({\n  //         businessName: \"New\",\n  //         contactName: \"Testing\",\n  //         phone: \"123-456-7890\",\n  //         street: \"Claremont ave.\",\n  //         city: \"Montclair\",\n  //         state: \"New Jersey\",\n  //         zipcode: \"07042\"\n  // })\n  //     console.log(result);\n  // }, [])\n\n  // const [customers, setCustomers] = useState([]);\n  // const [search, setSearch] = useState([]);\n  // const [searchResults, setSearchResults] = useState([]);\n\n  // useEffect(() => {\n  //     getCustomers();\n  // }, []);\n\n  // const getCustomers = () => {\n  //     API.getAllCustomers()\n  //     .then((res) => {\n  //         setCustomers(res.data);\n  //         console.log(customers);\n  //     })\n  //     .catch(err => console.log(err));\n  // }\n  switch (customers.status) {\n    case \"loading\":\n      return <h1 className=\"text-center my-5\">Loading</h1>;\n    case \"error\":\n      return <h4 className=\"text-center my-5\">Oops, something went wrong!</h4>;\n    default:\n      return (\n        <>\n          <SideNavBar />\n          <div className=\"main-section\">\n            <CustomerSearchBar\n              heading=\"Customer Search\"\n              subheading=\"Search by name, address, or phone number\"\n              placeholder=\"name, address, or phone number\"\n              onChange={handleInputChange}\n              onClick={handleSearch}\n\n            />\n\n           <CustomersTable searchResults={searchResults || customers.data} />\n          </div>\n        </>\n      );\n  }\n}\n\nexport default Customers;\n","/Users/amandadargenio/java-react/project/frontend/metronics-react-frontend/src/API/index.js",["120","121"],"import ky from 'ky';\nimport Cookies from 'js-cookie';\nimport axios from \"axios\";\n\nconst customerUrl = 'http://localhost:5557/api/customer/';\nconst requestUrl = 'http://localhost:5557/api/requests/';\nconst partUrl = 'http://localhost:5557/api/part/';\nconst loginUrl = 'http://localhost:5557/api/loggedIn/';\nconst viewModelUrl = 'http://localhost:5557/viewmodel/';\n\n\nconst API = {\n\n  //View model\n\n  getViewModel() {\n    return axios.get(viewModelUrl, { ...this.options });\n  },\n\n  // Customers\n  getAllCustomers() {\n    return ky.get(customerUrl, { ...this.options }).json();\n  },\n  getCustomerById(id) {\n    return ky.get(customerUrl + id, { ...this.options }).json();\n  },\n  createCustomer(customer) {\n    return ky.post(customerUrl, { json: customer, ...this.options }).json();\n  },\n  updateCustomer(customer, id) {\n    return ky.put(customerUrl + id, { json: customer, ...this.options }).json();\n  },\n  deleteCustomer(customer, id) {\n    return ky.delete(customerUrl + id, { json: customer, ...this.options }).json();\n  },\n\n  // Requests\n  getAllRequests() {\n    return ky.get(requestUrl, { ...this.options }).json();\n  },\n  getRequestById(id) {\n    return ky.get(requestUrl + id, { ...this.options }).json();\n  },\n  createRequest(request) {\n    return ky.post(requestUrl, { json: request, ...this.options }).json();\n  },\n  findByStatus(status) {\n    return ky.get(requestUrl + 'status/' + status, { ...this.options }).json();\n  },\n  updateRequest(request) {\n    return ky.put(requestUrl, { json: request, ...this.options }).json();\n  },\n  deleteRequest(id,) {\n    return ky.delete(requestUrl + id, { ...this.options });\n  },\n\n  // Parts\n  getAllParts() {\n    return ky.get(partUrl, { ...this.options }).json();\n  },\n  getPartById(id) {\n    return ky.get(partUrl + id, { ...this.options }).json();\n  },\n  createPart(part) {\n    return ky.post(partUrl, { json: part, ...this.options }).json();\n  },\n  updatePart(part) {\n    console.log({...this.options, json:part})\n    return ky.put(partUrl, { ...this.options, json:part });\n  },\n  deletePart(id) {\n    return ky.delete(partUrl + id, { ...this.options });\n  },\n  async loggedIn(username, password) {\n    const authToken = btoa(`${username}:${password}`);\n    const response = await fetch('http://localhost:5557/api/loggedIn', {\n      headers: {\n        'Authorization': `Basic ${authToken}`\n      },\n      credentials: \"include\"\n    })\n\n\n  },\n  options: {\n    headers: {\n      'X-XSRF-TOKEN': Cookies.get('XSRF-TOKEN')\n    },\n    credentials: 'include'\n  }\n}\n\nexport default API;","/Users/amandadargenio/java-react/project/frontend/metronics-react-frontend/src/components/Col/Col.js",[],["122","123"],"/Users/amandadargenio/java-react/project/frontend/metronics-react-frontend/src/components/Row/Row.js",[],"/Users/amandadargenio/java-react/project/frontend/metronics-react-frontend/src/components/Container/Container.js",[],"/Users/amandadargenio/java-react/project/frontend/metronics-react-frontend/src/components/index.js",[],"/Users/amandadargenio/java-react/project/frontend/metronics-react-frontend/src/components/Header/index.js",[],"/Users/amandadargenio/java-react/project/frontend/metronics-react-frontend/src/pages/index.js",[],"/Users/amandadargenio/java-react/project/frontend/metronics-react-frontend/src/pages/InventoryPage.js",["124","125","126","127"],"import React, { useEffect, useState } from \"react\";\nimport API from \"../API/index\";\nimport { useMutation, useQuery, useQueries, useQueryClient } from \"react-query\";\nimport ky from \"ky\";\n\nimport { SinglePartView, Searchbar, SideNavBar } from \"../components\";\nimport { set } from \"js-cookie\";\n\nexport default function InventoryPage() {\n  const qc = useQueryClient();\n  const { isLoading, data } = useQuery(\"fetchParts\", API.getAllParts, {\n    onSuccess: (data) => {\n      // console.log(data);\n    },\n  });\n  const [viewingSinglePart, setViewingSinglePart] = useState(false);\n  const [singlePartInfo, setSinglePartInfo] = useState({});\n  const [searchTerm, setSearchTerm] = useState(\"\");\n\n  // useEffect(async () => {\n    // const response = await API.loggedIn(\"bob\", \"password\");\n\n    // const result = await API.updatePart({\n    //   id: 12,\n    //   description: \"just an ordinary part\",\n    //   partNumber: \"32332\",\n    //   quantity: 45,\n    // });\n  // }, []);\n\n  async function switchToSinglePartView(part) {\n    await setSinglePartInfo(part);\n    await setViewingSinglePart(true);\n  }\n\n  function returnToListView() {\n    // setSinglePartInfo({});\n    setViewingSinglePart(false);\n  }\n\n  async function submitChanges(partToChange) {\n    await API.updatePart(partToChange);\n    qc.invalidateQueries(\"fetchParts\");\n    setViewingSinglePart(false);\n  }\n  const incrementStockMutation = useMutation(\n    async (input) => {\n      await API.updatePart(input);\n    },\n    {\n      onSuccess: async () => {\n        await qc.invalidateQueries(\"fetchParts\");\n      },\n    }\n  );\n\n  const onChangeAmount = async (part) => {\n    await incrementStockMutation.mutateAsync(part);\n  };\n\n  return (\n    <>\n      <SideNavBar />\n      <div className=\"inventory-page-wrapper container\">\n        <div className=\"row\">\n          <div className=\"col-sm inventory-search-bar-wrapper\">\n            <Searchbar\n              heading=\"Inventory Search\"\n              subheading=\"Search by part number or description\"\n              placeholder=\"Part # or description\"\n              setSearch={setSearchTerm}\n            >\n              {\" \"}\n            </Searchbar>\n          </div>\n        </div>\n        {viewingSinglePart ? (\n          <div className=\"row\">\n            <div className=\"col-sm\">\n              <SinglePartView\n                part={singlePartInfo}\n                returnToListView={returnToListView}\n                submitChanges={submitChanges}\n              ></SinglePartView>\n            </div>\n          </div>\n        ) : (\n          <div className=\"row\">\n            <div className=\"col-sm\">\n              <table className=\"table table-sm\">\n                <thead>\n                  <tr>\n                    <th>Part #</th>\n                    <th>Description</th>\n                    <th style={{ textAlign: \"center\" }}># In Inventory</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {isLoading ? (\n                    <tr>Loading...</tr>\n                  ) : (\n                    data\n                      .filter((part) => {\n                        if (part.description != null) {\n                          if (\n                            part.partNumber.includes(searchTerm) ||\n                            part.description.includes(searchTerm)\n                          ) {\n                            return true;\n                          } else {\n                            return false;\n                          }\n                        } else if (\n                          part.description === null &&\n                          searchTerm === \"\"\n                        ) {\n                          return true;\n                        } else {\n                          return false;\n                        }\n                      })\n                      .map((part) => {\n                        return (\n                          <tr key={part.id}>\n                            <td> {part.partNumber} </td>\n                            <td> {part.description} </td>\n                            <td style={{ textAlign: \"center\" }}>\n                              {\" \"}\n                              {part.quantity}{\" \"}\n                            </td>\n                            <td\n                              className=\"button-row\"\n                              style={{ borderStyle: \"none\" }}\n                            >\n                              <button\n                                type=\"button\"\n                                className=\"inventory-adjust-btn\"\n                                disabled={isLoading ? true : false}\n                                onClick={() =>\n                                  onChangeAmount({\n                                    ...part,\n                                    quantity: part.quantity + 1,\n                                  })\n                                }\n                              >\n                                ᐃ\n                              </button>\n                              <button\n                                type=\"button\"\n                                className=\"inventory-adjust-btn\"\n                                onClick={() =>\n                                  onChangeAmount({\n                                    ...part,\n                                    quantity: part.quantity - 1,\n                                  })\n                                }\n                              >\n                                ᐁ\n                              </button>\n                              <button\n                                type=\"button\"\n                                className=\"inventory-edit-btn\"\n                                onClick={() => switchToSinglePartView(part)}\n                              >\n                                ✎\n                              </button>\n                            </td>\n                          </tr>\n                        );\n                      })\n                  )}\n                </tbody>\n              </table>\n            </div>\n          </div>\n        )}\n      </div>\n    </>\n  );\n}\n","/Users/amandadargenio/java-react/project/frontend/metronics-react-frontend/src/pages/HomePage.js",["128"],"import { useQuery, useQueryClient } from 'react-query';\nimport { SideNavBar, QuickActions, PartsWarning, NewRequests } from '../components';\nimport React from 'react';\nimport API from '../API';\n\nconst fetchRequests = async () => await API.getAllRequests();\nconst fetchParts = async () => await API.getAllParts();\n\nconst HomePage = () => {\n  const requests = useQuery('requests', fetchRequests);\n  const parts = useQuery('parts', fetchParts);\n\n  // const queryClient = useQueryClient();\n\n  switch (requests.status || parts.status) {\n    case 'loading':\n      return <h1 className=\"text-center my-5\">Loading</h1>;\n    case 'error':\n      return <h4 className=\"text-center my-5\">Oops, something went wrong!</h4>\n    default:\n      return (\n      <>\n        <SideNavBar />\n        <div className=\"main-section\">\n          <QuickActions />\n          <PartsWarning \n            parts={parts.data} />\n          <NewRequests \n            requests={requests.data} />\n        </div>\n      </>\n    )\n  }\n}\n\nexport default HomePage;","/Users/amandadargenio/java-react/project/frontend/metronics-react-frontend/src/components/LoginForm/index.js",["129","130"],"import { useState } from \"react\";\nimport API from \"../../API\";\nimport Container from \"../Container/Container\";\nimport Header from \"../Header/index\";\nimport \"./style.css\";\nimport { useHistory } from \"react-router-dom\";\nimport SideNavbar from \"../SideNavbar\";\n\n\nfunction LoginForm() {\n  let history = useHistory();\n  const [state, setState] = useState({\n    email: \"\",\n    password: \"\",\n    // confirmPassword: \"\",\n    successMessage: \"\",\n  });\n  const handleChange = (e) => {\n    const { id, value } = e.target;\n    setState((prevState) => ({\n      ...prevState,\n      [id]: value,\n    }));\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    console.log(state.password + state.email);\n    API.loggedIn(state.email, state.password)\n    .then(\n      history.push(\"/home\"))\n  };\n\n  return (\n    <>\n    <Container>\n      <div className=\"card Login col-12 col-lg-4 login-card d-flex align-items-center \">\n        <span> Login </span>\n       <form>\n          <div className=\"form-group text-left\">\n            <label htmlFor=\"exampleInputEmail1\">Email address</label>\n            <input\n              type=\"email\"\n              className=\"form-control\"\n              id=\"email\"\n              aria-describedby=\"emailHelp\"\n              placeholder=\"Enter email\"\n              value={state.email}\n              onChange={handleChange}\n            />\n            <small id=\"emailHelp\" className=\"form-text text-muted\">\n              We'll never share your email with anyone else.\n            </small>\n          </div>\n          <div className=\"form-group text-left\">\n            <label htmlFor=\"exampleInputPassword1\">Password</label>\n            <input\n              type=\"password\"\n              className=\"form-control\"\n              id=\"password\"\n              placeholder=\"Password\"\n              value={state.password}\n              onChange={handleChange}\n            />\n          </div>\n          {/* <div className=\"form-group text-left\">\n                <label htmlFor=\"exampleInputPassword1\">Confirm Password</label>\n                <input type=\"password\" \n                    className=\"form-control\" \n                    id=\"confirmPassword\" \n                    placeholder=\"Confirm Password\"\n                    value={state.confirmPassword}\n                    onChange={handleChange} \n                />\n            </div> */}\n          <button\n            type=\"submit\"\n            className=\"btn btn-primary\"\n            onClick={handleSubmit}\n          >\n            Submit\n          </button>\n        </form>\n        <div\n          className=\"alert alert-success mt-2\"\n          style={{ display: state.successMessage ? \"block\" : \"none\" }}\n          role=\"alert\"\n        >\n          {state.successMessage}\n        </div>\n        <div className=\"mt-2\">\n          <span>Don't have an account? </span>\n          {/* <span className=\"loginText\" onClick={() => redirectToLogin()}>Login here</span>  */}\n        </div>\n      </div>\n    </Container>\n    </>\n  );\n}\n\nexport default LoginForm;\n","/Users/amandadargenio/java-react/project/frontend/metronics-react-frontend/src/pages/RequestPage.js",["131","132"],"import { useQuery, useQueryClient } from 'react-query';\nimport { SideNavBar, Searchbar, RequestTable } from '../components';\nimport API from '../API';\nimport { useState, useEffect } from 'react';\n\nconst fetchRequests = async () => await API.getAllRequests();\n\nconst RequestPage = () => {\n  const requests = useQuery('requests', fetchRequests);\n  const [search, setSearch] = useState('')\n  const [searchResults, setSearchResults] = useState(requests.data);\n\n  useEffect(() => {\n    if (search === '') {\n      setSearchResults(requests.data);\n      return;\n    }\n    let searchRequestList = [];\n    for (let request of requests.data) {\n      let name = request.customer.businessName.toLowerCase(); let invoice = request.invoiceNumber; let date = request.dateCompleted;\n      if (name.indexOf(search) !== -1 || invoice.indexOf(search) !== -1 || date.indexOf(search) !== -1) {\n        searchRequestList.push(request);\n      }\n    }\n    setSearchResults(searchRequestList);\n  }, [search]);\n\n  switch (requests.status) {\n    case 'loading':\n      return <h1 className=\"text-center my-5\">Loading</h1>;\n    case 'error':\n      return <h4 className=\"text-center my-5\">Oops, something went wrong!</h4>\n    default:\n      return (\n        <>\n          <SideNavBar />\n          <div className=\"main-section\">\n            <Searchbar \n              heading=\"Service Request Search\"\n              subheading=\"Search by customer, date completed, or invoice #\"\n              placeholder=\"Customer, date, or invoice #\"\n              setSearch={setSearch} />\n            <RequestTable \n              requests={searchResults} />\n          </div>\n        </>\n      )\n  }\n}\n\nexport default RequestPage;","/Users/amandadargenio/java-react/project/frontend/metronics-react-frontend/src/components/Searchbar.js",[],"/Users/amandadargenio/java-react/project/frontend/metronics-react-frontend/src/components/SideNavbar.js",[],"/Users/amandadargenio/java-react/project/frontend/metronics-react-frontend/src/components/RequestTable.js",[],"/Users/amandadargenio/java-react/project/frontend/metronics-react-frontend/src/components/CustomersTable.js",["133","134"],"import { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\n\nconst CustomersTable = ({ searchResults }) => {\n//   console.log(customers);\n const history = useHistory();\n const [ customer, setCustomer ] = useState();\n\n// const routeToView = () => {\n\n// history.push({\n//   pathname: \"/view\",\n//   state: {searchResults: searchResults}\n// });\n\n// }\n  return (\n    <div id=\"requests-table\" className=\"mt-5\">\n      <h3 className=\"float-start\">Customer Search Results:</h3>\n      {/* <div className=\"float-end\">\n          <select className=\"form-select\">\n            <option>Filter by status</option>\n            <option>Waiting</option>\n            <option>Scheduled</option>\n            <option>Completed</option>\n            <option>Canceled</option>\n          </select>\n        </div> */}\n      <table className=\"table\">\n        <thead>\n          <tr>\n            <th scope=\"col\">Company Name</th>\n            <th scope=\"col\">Contact</th>\n            <th scope=\"col\">Address</th>\n            <th scope=\"col\">Phone Number</th>\n            <th scope=\"col\"></th>\n          </tr>\n        </thead>\n        <tbody>\n          {searchResults.map((c) => (\n            <tr\n            key={c.id}\n            >\n              <td className=\"text-center\">{c.businessName}</td>\n              <td className=\"text-center\">\n                {c.contactName ? c.contactName : \"--\"}\n              </td>\n              <td>\n                {c.street} {c.city}, {c.state} {c.zipcode}\n              </td>\n              <td>{c.phone}</td>\n              <td>\n                <button className=\"btn btn-primary\"\n                onClick={() => {\n                  history.push({\n                    pathname: \"/view/\" + c.id,\n                    state: {setCustomer: c.id}\n                  });\n                }}\n                >view</button>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default CustomersTable;","/Users/amandadargenio/java-react/project/frontend/metronics-react-frontend/src/components/ViewModel.js",["135","136","137"],"import { useEffect, useState } from \"react\";\nimport { useLocation, useParams } from \"react-router-dom\";\nimport API from \"../API\";\nimport { SideNavBar } from \"../components\";\nfunction ViewModel() {\n  const [requests, setRequests] = useState([]);\n  const [customer, setCustomer] = useState([]);\n  const filterRequests = (reqs) => {\n    return reqs.filter((v) => { return v.customer.id === parseInt(id) });\n  };\n  const { id } = useParams()\n  useEffect(() => {\n    API.getAllRequests().then(async (res) => {\n      await setRequests(filterRequests(res));\n      console.log(requests)\n    });\n    console.log(id);\n    API.getCustomerById(id).then((res) => {\n      setCustomer(res);\n    });\n  }, []);\n  return (\n    <>\n      <SideNavBar />\n      <div className=\"main-section\">\n           {\n        (customer != undefined)\n          ?\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col\">\n                <h3>{customer.businessName}</h3>\n              </div>\n            </div>\n            <div className=\"row\">\n              <div className=\"col\">\n                <div>\n                  {customer.street}, {customer.city}{\" \"}\n                </div>\n                <div>\n                  {customer.state}, {customer.zipcode}\n                </div>\n              </div>\n              <div className=\"col\">\n                <strong>Phone</strong> <div>{customer.phone}</div>\n              </div>\n              <div className=\"col\">\n                <strong>Contact Name</strong>\n                <div>{customer.contactName}</div>\n              </div>\n            </div>\n            <table className=\"table\">\n              <thead>\n                <tr>\n                  <th scope=\"col\">Invoice #</th>\n                  <th scope=\"col\">Date Completed</th>\n                  <th scope=\"col\">Type</th>\n                  <th scope=\"col\">Company Name</th>\n                  <th scope=\"col\">City</th>\n                  <th scope=\"col\">Status</th>\n                  <th scope=\"col\"></th>\n                </tr>\n              </thead>\n              <tbody>\n                {requests.map(req => (\n                  <tr key={req.id}>\n                    <td className=\"text-center\">{req.invoiceNumber ? req.invoiceNumber : \"--\"}</td>\n                    <td className=\"text-center\">{req.dateCompleted ? req.dateCompleted : \"--\"}</td>\n                    <td>{req.type}</td>\n                    <td>{req.customer.businessName}</td>\n                    <td>{req.customer.city}</td>\n                    <td>{req.status}</td>\n                    <td><button className=\"btn btn-primary\">view</button></td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n          :\n          <div>Can't find anything</div>\n      }\n         \n         </div>\n    </>\n  );\n}\nexport default ViewModel;\n","/Users/amandadargenio/java-react/project/frontend/metronics-react-frontend/src/components/CustomerSearchBar.js",[],"/Users/amandadargenio/java-react/project/frontend/metronics-react-frontend/src/components/SinglePartView.js",[],"/Users/amandadargenio/java-react/project/frontend/metronics-react-frontend/src/components/QuickActions.js",[],"/Users/amandadargenio/java-react/project/frontend/metronics-react-frontend/src/components/PartsWarning.js",["138"],"import { useEffect, useState } from \"react\";\n\nconst PartsWarning = ({ parts }) => {\n  const [orderParts, setOrderParts] = useState([])\n\n  useEffect(() => {\n    let orderList = [];\n    for (let part of parts) {\n      if (part.quantity < 4) {\n        orderList.push(part);\n      }\n    }\n    setOrderParts(orderList);\n  }, [])\n\n  return (\n    <div className=\"my-5\">\n      <h5><strong>Parts that need to be ordered</strong></h5>\n      <table className=\"table\">\n        <thead>\n          <tr>\n            <th scope=\"col\">Part #</th>\n            <th scope=\"col\">Description</th>\n            <th scope=\"col\"># In Inventory</th>\n          </tr>\n        </thead>\n        <tbody>\n          {orderParts.map(part => (\n            <tr key={part.id}>\n              <td>{part.partNumber}</td>\n              <td>{part.description}</td>\n              <td>{part.quantity}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  )\n}\n\nexport default PartsWarning;","/Users/amandadargenio/java-react/project/frontend/metronics-react-frontend/src/components/NewRequests.js",["139"],"import { useEffect, useState } from 'react';\n\nconst NewRequests = ({ requests }) => {\n  const [newRequests, setNewRequests] = useState([]);\n\n  useEffect(() => {\n    let newList = [];\n    for (let request of requests) {\n      if (request.status === 'waiting') {\n        newList.push(request);\n      }\n    }\n    setNewRequests(newList);\n  }, [])\n\n  return (\n    <div className=\"my-5\">\n      <h5><strong>New Service Requests</strong></h5>\n      <table className=\"table\">\n        <thead>\n          <tr>\n            <th scope=\"col\">Company Name</th>\n            <th scope=\"col\">Address</th>\n            <th scope=\"col\">Phone #</th>\n            <th scope=\"col\">Contact Name</th>\n            <th scope=\"col\"></th>\n          </tr>\n        </thead>\n        <tbody>\n          {newRequests.map(req => (\n            <tr key={req.id}>\n              <td>{req.customer.businessName}</td>\n              <td>\n                {req.customer.street}<br></br>\n                {req.customer.city}, {req.customer.state} {req.customer.zipcode}\n              </td>\n              <td>{req.customer.phone}</td>\n              <td>{req.customer.contactName}</td>\n              <td><button className=\"btn btn-primary\">view</button></td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  )\n}\n\nexport default NewRequests;","/Users/amandadargenio/java-react/project/frontend/metronics-react-frontend/src/pages/InventoryAddPart.js",["140"],"import React, { useState } from 'react';\nimport { SideNavBar } from \"../components\";\nimport API from \"../API\";\n\n\nexport default function InventoryAddPart() {\n\tconst [currentPart, setCurrentpart] = useState({\n\t\tpartNumber: \"\",\n\t\tdescription: \"\",\n\t\tpurchasePrice: 0.00,\n\t\tsalePrice: 0.00,\n\t\tquantity: 0\n\t});\n\tconst [apiResponseStatus, setApiResponseStatus] = useState('noShow')\n\n\tasync function submitNewPart(){\n\t\ttry{\n\t\t\tawait API.createPart(currentPart);\n\t\t\tsetApiResponseStatus('sucess')\n\n\t\t} catch(err){\n\t\t\tconsole.log(err)\n\t\t\tsetApiResponseStatus('error')\n\t\t}\n\n\t}\n\n\tfunction errorOrSucess(){\n\t\tswitch(apiResponseStatus){\n\t\t\tcase 'error':\n\t\t\treturn <div className=\"add-part-error\">Something Went Wrong!</div>\n\t\t\tcase 'sucess':\n\t\t\treturn <div className=\"add-part-sucess\"><span>Part Uploaded! </span> <a href=\"/addpart\">Click here to add another part</a></div>\n\t\t}\n\n\t\t\n\t}\n\n\treturn (\n\t\t<div clasName=\"inventory-add-part container\">\n\t\t\t<SideNavBar></SideNavBar>\n\t\t\t<div clasName=\"row\">\n\t\t\t\t<div className=\"col-3\"></div>\n\t\t\t\t<div className=\"col-6-sm\">\n\t\t\t\t</div>\n\t\t\t\t<div className=\"col-3\"></div>\n\t\t\t</div>\n\t\t\t<div className=\"row\">\n\t\t\t\t<div className=\"col-sm\">\n\t\t\t\t\t<div className=\"single-part-view row\">\n\t\t\t\t\t\t<div className=\"col-3\"></div>\n\t\t\t\t\t\t<div className=\"col-6\">\n\t\t\t\t\t\t\t{/* <div className=\"return-to-list-view-btn-wrapper\">\n\t\t\t\t\t\t\t\t<span className=\"return-to-list-view-btn\" onClick={returnToListView}>ᐊ Return to List View</span>\n\t\t\t\t\t\t\t</div> */}\n\t\t\t\t\t<h1 style={{marginTop:\"3rem\"}}> Add a new Part to Inventory</h1>\n\t\t\t\t\t<hr style={{ marginTop:\"0px\" }}/>\n\t\t\t\t\t\t\t<div className=\"part-input-wrapper\">\n\t\t\t\t\t\t\t\t<span>Part Number <span className={currentPart.partNumber ? \"hidden\": \"mandatory\"}>- mandatory</span></span><br />\n\t\t\t\t\t\t\t\t<input type=\"text\" name=\"Part Number\" value={currentPart.partNumber} onChange={(e) => setCurrentpart({ ...currentPart, partNumber: e.target.value })}></input>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"part-input-wrapper\">\n\t\t\t\t\t\t\t\t<span>Description <span className={currentPart.description ? \"hidden\": \"mandatory\"}>- mandatory</span ></span><br />\n\t\t\t\t\t\t\t\t<input type=\"text\" className=\"description-text-input\" name=\"description\" value={currentPart.description} onChange={e => setCurrentpart({ ...currentPart, description: e.target.value })}></input>\n\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"part-input-wrapper\">\n\t\t\t\t\t\t\t\t<span>Purchase Price</span><br />\n\t\t\t\t\t\t\t\t<input type=\"text\" class=\"\" value={currentPart.purchasePrice} onChange={e => setCurrentpart({ ...currentPart, purchasePrice: e.target.value })}></input>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"part-input-wrapper\">\n\t\t\t\t\t\t\t\t<span>Sale Price</span><br />\n\t\t\t\t\t\t\t\t<input type=\"text\" class=\"\" value={currentPart.salePrice} onChange={e => setCurrentpart({ ...currentPart, salePrice: e.target.value })}></input>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"part-input-wrapper\">\n\t\t\t\t\t\t\t\t<span>Quantity</span><br />\n\t\t\t\t\t\t\t\t<input type=\"text\" class=\"\" value={currentPart.quantity} onChange={e => setCurrentpart({ ...currentPart, quantity: e.target.value })}></input>\n\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t<button onClick={submitNewPart} disabled={!(currentPart.currentPartNumber ||  currentPart.description)}>Add New Part</button>\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\terrorOrSucess() \n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"col-3\"></div>\n\t\t\t\t\t</div>\n\n\t\t\t\t</div>\n\t\t\t</div>\n\n\n\t\t</div>\n\t)\n}\n",{"ruleId":"141","replacedBy":"142"},{"ruleId":"143","replacedBy":"144"},{"ruleId":"145","severity":1,"message":"146","line":17,"column":11,"nodeType":"147","messageId":"148","endLine":17,"endColumn":15},{"ruleId":"145","severity":1,"message":"149","line":17,"column":17,"nodeType":"147","messageId":"148","endLine":17,"endColumn":24},{"ruleId":"145","severity":1,"message":"150","line":26,"column":9,"nodeType":"147","messageId":"148","endLine":26,"endColumn":20},{"ruleId":"145","severity":1,"message":"151","line":8,"column":7,"nodeType":"147","messageId":"148","endLine":8,"endColumn":15},{"ruleId":"145","severity":1,"message":"152","line":76,"column":11,"nodeType":"147","messageId":"148","endLine":76,"endColumn":19},{"ruleId":"141","replacedBy":"153"},{"ruleId":"143","replacedBy":"154"},{"ruleId":"145","severity":1,"message":"155","line":1,"column":17,"nodeType":"147","messageId":"148","endLine":1,"endColumn":26},{"ruleId":"145","severity":1,"message":"156","line":3,"column":33,"nodeType":"147","messageId":"148","endLine":3,"endColumn":43},{"ruleId":"145","severity":1,"message":"157","line":4,"column":8,"nodeType":"147","messageId":"148","endLine":4,"endColumn":10},{"ruleId":"145","severity":1,"message":"158","line":7,"column":10,"nodeType":"147","messageId":"148","endLine":7,"endColumn":13},{"ruleId":"145","severity":1,"message":"159","line":1,"column":20,"nodeType":"147","messageId":"148","endLine":1,"endColumn":34},{"ruleId":"145","severity":1,"message":"160","line":4,"column":8,"nodeType":"147","messageId":"148","endLine":4,"endColumn":14},{"ruleId":"145","severity":1,"message":"161","line":7,"column":8,"nodeType":"147","messageId":"148","endLine":7,"endColumn":18},{"ruleId":"145","severity":1,"message":"159","line":1,"column":20,"nodeType":"147","messageId":"148","endLine":1,"endColumn":34},{"ruleId":"162","severity":1,"message":"163","line":26,"column":6,"nodeType":"164","endLine":26,"endColumn":14,"suggestions":"165"},{"ruleId":"145","severity":1,"message":"166","line":8,"column":10,"nodeType":"147","messageId":"148","endLine":8,"endColumn":18},{"ruleId":"145","severity":1,"message":"167","line":8,"column":20,"nodeType":"147","messageId":"148","endLine":8,"endColumn":31},{"ruleId":"145","severity":1,"message":"168","line":2,"column":10,"nodeType":"147","messageId":"148","endLine":2,"endColumn":21},{"ruleId":"162","severity":1,"message":"169","line":21,"column":6,"nodeType":"164","endLine":21,"endColumn":8,"suggestions":"170"},{"ruleId":"171","severity":1,"message":"172","line":27,"column":19,"nodeType":"173","messageId":"174","endLine":27,"endColumn":21},{"ruleId":"162","severity":1,"message":"175","line":14,"column":6,"nodeType":"164","endLine":14,"endColumn":8,"suggestions":"176"},{"ruleId":"162","severity":1,"message":"177","line":14,"column":6,"nodeType":"164","endLine":14,"endColumn":8,"suggestions":"178"},{"ruleId":"179","severity":1,"message":"180","line":29,"column":3,"nodeType":"181","messageId":"182","endLine":34,"endColumn":4},"no-native-reassign",["183"],"no-negated-in-lhs",["184"],"no-unused-vars","'data' is assigned a value but never used.","Identifier","unusedVar","'setData' is assigned a value but never used.","'queryClient' is assigned a value but never used.","'loginUrl' is assigned a value but never used.","'response' is assigned a value but never used.",["183"],["184"],"'useEffect' is defined but never used.","'useQueries' is defined but never used.","'ky' is defined but never used.","'set' is defined but never used.","'useQueryClient' is defined but never used.","'Header' is defined but never used.","'SideNavbar' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'requests.data'. Either include it or remove the dependency array.","ArrayExpression",["185"],"'customer' is assigned a value but never used.","'setCustomer' is assigned a value but never used.","'useLocation' is defined but never used.","React Hook useEffect has missing dependencies: 'filterRequests', 'id', and 'requests'. Either include them or remove the dependency array.",["186"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'parts'. Either include it or remove the dependency array.",["187"],"React Hook useEffect has a missing dependency: 'requests'. Either include it or remove the dependency array.",["188"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-global-assign","no-unsafe-negation",{"desc":"189","fix":"190"},{"desc":"191","fix":"192"},{"desc":"193","fix":"194"},{"desc":"195","fix":"196"},"Update the dependencies array to be: [requests.data, search]",{"range":"197","text":"198"},"Update the dependencies array to be: [filterRequests, id, requests]",{"range":"199","text":"200"},"Update the dependencies array to be: [parts]",{"range":"201","text":"202"},"Update the dependencies array to be: [requests]",{"range":"203","text":"204"},[974,982],"[requests.data, search]",[689,691],"[filterRequests, id, requests]",[320,322],"[parts]",[340,342],"[requests]"]